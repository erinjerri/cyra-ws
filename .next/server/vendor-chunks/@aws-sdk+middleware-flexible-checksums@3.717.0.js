"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@aws-sdk+middleware-flexible-checksums@3.717.0";
exports.ids = ["vendor-chunks/@aws-sdk+middleware-flexible-checksums@3.717.0"];
exports.modules = {

/***/ "(rsc)/../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/getCrc32ChecksumAlgorithmFunction.js":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/getCrc32ChecksumAlgorithmFunction.js ***!
  \***************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getCrc32ChecksumAlgorithmFunction = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/../../../../node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst crc32_1 = __webpack_require__(/*! @aws-crypto/crc32 */ \"(rsc)/../../../../node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js\");\nconst util_1 = __webpack_require__(/*! @aws-crypto/util */ \"(rsc)/../../../../node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/index.js\");\nconst zlib = tslib_1.__importStar(__webpack_require__(/*! zlib */ \"zlib\"));\nclass NodeCrc32 {\n    constructor() {\n        this.checksum = 0;\n    }\n    update(data) {\n        this.checksum = zlib.crc32(data, this.checksum);\n    }\n    async digest() {\n        return (0, util_1.numToUint8)(this.checksum);\n    }\n    reset() {\n        this.checksum = 0;\n    }\n}\nconst getCrc32ChecksumAlgorithmFunction = () => {\n    if (typeof zlib.crc32 === \"undefined\") {\n        return crc32_1.AwsCrc32;\n    }\n    return NodeCrc32;\n};\nexports.getCrc32ChecksumAlgorithmFunction = getCrc32ChecksumAlgorithmFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK21pZGRsZXdhcmUtZmxleGlibGUtY2hlY2tzdW1zQDMuNzE3LjAvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtZmxleGlibGUtY2hlY2tzdW1zL2Rpc3QtY2pzL2dldENyYzMyQ2hlY2tzdW1BbGdvcml0aG1GdW5jdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5Q0FBeUM7QUFDekMsZ0JBQWdCLG1CQUFPLENBQUMsZ0dBQU87QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsNElBQW1CO0FBQzNDLGVBQWUsbUJBQU8sQ0FBQyx5SUFBa0I7QUFDekMsa0NBQWtDLG1CQUFPLENBQUMsa0JBQU07QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsiL1VzZXJzL2VyaW5qZXJyaS9ub2RlX21vZHVsZXMvLnBucG0vQGF3cy1zZGsrbWlkZGxld2FyZS1mbGV4aWJsZS1jaGVja3N1bXNAMy43MTcuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1mbGV4aWJsZS1jaGVja3N1bXMvZGlzdC1janMvZ2V0Q3JjMzJDaGVja3N1bUFsZ29yaXRobUZ1bmN0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRDcmMzMkNoZWNrc3VtQWxnb3JpdGhtRnVuY3Rpb24gPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY3JjMzJfMSA9IHJlcXVpcmUoXCJAYXdzLWNyeXB0by9jcmMzMlwiKTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCJAYXdzLWNyeXB0by91dGlsXCIpO1xuY29uc3QgemxpYiA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJ6bGliXCIpKTtcbmNsYXNzIE5vZGVDcmMzMiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY2hlY2tzdW0gPSAwO1xuICAgIH1cbiAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgICB0aGlzLmNoZWNrc3VtID0gemxpYi5jcmMzMihkYXRhLCB0aGlzLmNoZWNrc3VtKTtcbiAgICB9XG4gICAgYXN5bmMgZGlnZXN0KCkge1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxfMS5udW1Ub1VpbnQ4KSh0aGlzLmNoZWNrc3VtKTtcbiAgICB9XG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuY2hlY2tzdW0gPSAwO1xuICAgIH1cbn1cbmNvbnN0IGdldENyYzMyQ2hlY2tzdW1BbGdvcml0aG1GdW5jdGlvbiA9ICgpID0+IHtcbiAgICBpZiAodHlwZW9mIHpsaWIuY3JjMzIgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIGNyYzMyXzEuQXdzQ3JjMzI7XG4gICAgfVxuICAgIHJldHVybiBOb2RlQ3JjMzI7XG59O1xuZXhwb3J0cy5nZXRDcmMzMkNoZWNrc3VtQWxnb3JpdGhtRnVuY3Rpb24gPSBnZXRDcmMzMkNoZWNrc3VtQWxnb3JpdGhtRnVuY3Rpb247XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/getCrc32ChecksumAlgorithmFunction.js\n");

/***/ }),

/***/ "(rsc)/../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/index.js":
/*!***********************************************************************************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/index.js ***!
  \***********************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  CONFIG_REQUEST_CHECKSUM_CALCULATION: () => CONFIG_REQUEST_CHECKSUM_CALCULATION,\n  CONFIG_RESPONSE_CHECKSUM_VALIDATION: () => CONFIG_RESPONSE_CHECKSUM_VALIDATION,\n  ChecksumAlgorithm: () => ChecksumAlgorithm,\n  ChecksumLocation: () => ChecksumLocation,\n  DEFAULT_CHECKSUM_ALGORITHM: () => DEFAULT_CHECKSUM_ALGORITHM,\n  DEFAULT_REQUEST_CHECKSUM_CALCULATION: () => DEFAULT_REQUEST_CHECKSUM_CALCULATION,\n  DEFAULT_RESPONSE_CHECKSUM_VALIDATION: () => DEFAULT_RESPONSE_CHECKSUM_VALIDATION,\n  ENV_REQUEST_CHECKSUM_CALCULATION: () => ENV_REQUEST_CHECKSUM_CALCULATION,\n  ENV_RESPONSE_CHECKSUM_VALIDATION: () => ENV_RESPONSE_CHECKSUM_VALIDATION,\n  NODE_REQUEST_CHECKSUM_CALCULATION_CONFIG_OPTIONS: () => NODE_REQUEST_CHECKSUM_CALCULATION_CONFIG_OPTIONS,\n  NODE_RESPONSE_CHECKSUM_VALIDATION_CONFIG_OPTIONS: () => NODE_RESPONSE_CHECKSUM_VALIDATION_CONFIG_OPTIONS,\n  RequestChecksumCalculation: () => RequestChecksumCalculation,\n  ResponseChecksumValidation: () => ResponseChecksumValidation,\n  S3_EXPRESS_DEFAULT_CHECKSUM_ALGORITHM: () => S3_EXPRESS_DEFAULT_CHECKSUM_ALGORITHM,\n  flexibleChecksumsMiddleware: () => flexibleChecksumsMiddleware,\n  flexibleChecksumsMiddlewareOptions: () => flexibleChecksumsMiddlewareOptions,\n  getFlexibleChecksumsPlugin: () => getFlexibleChecksumsPlugin,\n  resolveFlexibleChecksumsConfig: () => resolveFlexibleChecksumsConfig\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/constants.ts\nvar RequestChecksumCalculation = {\n  /**\n   * When set, a checksum will be calculated for all request payloads of operations\n   * modeled with the {@link httpChecksum} trait where `requestChecksumRequired` is `true`\n   * AND/OR a `requestAlgorithmMember` is modeled.\n   * {@link https://smithy.io/2.0/aws/aws-core.html#aws-protocols-httpchecksum-trait httpChecksum}\n   */\n  WHEN_SUPPORTED: \"WHEN_SUPPORTED\",\n  /**\n   * When set, a checksum will only be calculated for request payloads of operations\n   * modeled with the {@link httpChecksum} trait where `requestChecksumRequired` is `true`\n   * OR where a `requestAlgorithmMember` is modeled and the user sets it.\n   * {@link https://smithy.io/2.0/aws/aws-core.html#aws-protocols-httpchecksum-trait httpChecksum}\n   */\n  WHEN_REQUIRED: \"WHEN_REQUIRED\"\n};\nvar DEFAULT_REQUEST_CHECKSUM_CALCULATION = RequestChecksumCalculation.WHEN_SUPPORTED;\nvar ResponseChecksumValidation = {\n  /**\n   * When set, checksum validation MUST be performed on all response payloads of operations\n   * modeled with the {@link httpChecksum} trait where `responseAlgorithms` is modeled,\n   * except when no modeled checksum algorithms are supported by an SDK.\n   * {@link https://smithy.io/2.0/aws/aws-core.html#aws-protocols-httpchecksum-trait httpChecksum}\n   */\n  WHEN_SUPPORTED: \"WHEN_SUPPORTED\",\n  /**\n   * When set, checksum validation MUST NOT be performed on response payloads of operations UNLESS\n   * the SDK supports the modeled checksum algorithms AND the user has set the `requestValidationModeMember` to `ENABLED`.\n   * It is currently impossible to model an operation as requiring a response checksum,\n   * but this setting leaves the door open for future updates.\n   */\n  WHEN_REQUIRED: \"WHEN_REQUIRED\"\n};\nvar DEFAULT_RESPONSE_CHECKSUM_VALIDATION = RequestChecksumCalculation.WHEN_SUPPORTED;\nvar ChecksumAlgorithm = /* @__PURE__ */ ((ChecksumAlgorithm3) => {\n  ChecksumAlgorithm3[\"MD5\"] = \"MD5\";\n  ChecksumAlgorithm3[\"CRC32\"] = \"CRC32\";\n  ChecksumAlgorithm3[\"CRC32C\"] = \"CRC32C\";\n  ChecksumAlgorithm3[\"SHA1\"] = \"SHA1\";\n  ChecksumAlgorithm3[\"SHA256\"] = \"SHA256\";\n  return ChecksumAlgorithm3;\n})(ChecksumAlgorithm || {});\nvar ChecksumLocation = /* @__PURE__ */ ((ChecksumLocation2) => {\n  ChecksumLocation2[\"HEADER\"] = \"header\";\n  ChecksumLocation2[\"TRAILER\"] = \"trailer\";\n  return ChecksumLocation2;\n})(ChecksumLocation || {});\nvar DEFAULT_CHECKSUM_ALGORITHM = \"MD5\" /* MD5 */;\nvar S3_EXPRESS_DEFAULT_CHECKSUM_ALGORITHM = \"CRC32\" /* CRC32 */;\n\n// src/stringUnionSelector.ts\nvar stringUnionSelector = /* @__PURE__ */ __name((obj, key, union, type) => {\n  if (!(key in obj))\n    return void 0;\n  const value = obj[key].toUpperCase();\n  if (!Object.values(union).includes(value)) {\n    throw new TypeError(`Cannot load ${type} '${key}'. Expected one of ${Object.values(union)}, got '${obj[key]}'.`);\n  }\n  return value;\n}, \"stringUnionSelector\");\n\n// src/NODE_REQUEST_CHECKSUM_CALCULATION_CONFIG_OPTIONS.ts\nvar ENV_REQUEST_CHECKSUM_CALCULATION = \"AWS_REQUEST_CHECKSUM_CALCULATION\";\nvar CONFIG_REQUEST_CHECKSUM_CALCULATION = \"request_checksum_calculation\";\nvar NODE_REQUEST_CHECKSUM_CALCULATION_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => stringUnionSelector(env, ENV_REQUEST_CHECKSUM_CALCULATION, RequestChecksumCalculation, \"env\" /* ENV */),\n  configFileSelector: (profile) => stringUnionSelector(profile, CONFIG_REQUEST_CHECKSUM_CALCULATION, RequestChecksumCalculation, \"shared config entry\" /* CONFIG */),\n  default: DEFAULT_REQUEST_CHECKSUM_CALCULATION\n};\n\n// src/NODE_RESPONSE_CHECKSUM_VALIDATION_CONFIG_OPTIONS.ts\nvar ENV_RESPONSE_CHECKSUM_VALIDATION = \"AWS_RESPONSE_CHECKSUM_VALIDATION\";\nvar CONFIG_RESPONSE_CHECKSUM_VALIDATION = \"response_checksum_validation\";\nvar NODE_RESPONSE_CHECKSUM_VALIDATION_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => stringUnionSelector(env, ENV_RESPONSE_CHECKSUM_VALIDATION, ResponseChecksumValidation, \"env\" /* ENV */),\n  configFileSelector: (profile) => stringUnionSelector(profile, CONFIG_RESPONSE_CHECKSUM_VALIDATION, ResponseChecksumValidation, \"shared config entry\" /* CONFIG */),\n  default: DEFAULT_RESPONSE_CHECKSUM_VALIDATION\n};\n\n// src/flexibleChecksumsMiddleware.ts\nvar import_core = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/../../../../node_modules/.pnpm/@aws-sdk+core@3.716.0/node_modules/@aws-sdk/core/dist-es/index.js\");\nvar import_protocol_http = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/../../../../node_modules/.pnpm/@smithy+protocol-http@4.1.8/node_modules/@smithy/protocol-http/dist-es/index.js\");\n\n// src/types.ts\nvar CLIENT_SUPPORTED_ALGORITHMS = [\n  \"CRC32\" /* CRC32 */,\n  \"CRC32C\" /* CRC32C */,\n  \"SHA1\" /* SHA1 */,\n  \"SHA256\" /* SHA256 */\n];\nvar PRIORITY_ORDER_ALGORITHMS = [\n  \"SHA256\" /* SHA256 */,\n  \"SHA1\" /* SHA1 */,\n  \"CRC32\" /* CRC32 */,\n  \"CRC32C\" /* CRC32C */\n];\n\n// src/getChecksumAlgorithmForRequest.ts\nvar getChecksumAlgorithmForRequest = /* @__PURE__ */ __name((input, { requestChecksumRequired, requestAlgorithmMember }, isS3Express) => {\n  const defaultAlgorithm = isS3Express ? S3_EXPRESS_DEFAULT_CHECKSUM_ALGORITHM : DEFAULT_CHECKSUM_ALGORITHM;\n  if (!requestAlgorithmMember || !input[requestAlgorithmMember]) {\n    return requestChecksumRequired ? defaultAlgorithm : void 0;\n  }\n  const checksumAlgorithm = input[requestAlgorithmMember];\n  if (!CLIENT_SUPPORTED_ALGORITHMS.includes(checksumAlgorithm)) {\n    throw new Error(\n      `The checksum algorithm \"${checksumAlgorithm}\" is not supported by the client. Select one of ${CLIENT_SUPPORTED_ALGORITHMS}.`\n    );\n  }\n  return checksumAlgorithm;\n}, \"getChecksumAlgorithmForRequest\");\n\n// src/getChecksumLocationName.ts\nvar getChecksumLocationName = /* @__PURE__ */ __name((algorithm) => algorithm === \"MD5\" /* MD5 */ ? \"content-md5\" : `x-amz-checksum-${algorithm.toLowerCase()}`, \"getChecksumLocationName\");\n\n// src/hasHeader.ts\nvar hasHeader = /* @__PURE__ */ __name((header, headers) => {\n  const soughtHeader = header.toLowerCase();\n  for (const headerName of Object.keys(headers)) {\n    if (soughtHeader === headerName.toLowerCase()) {\n      return true;\n    }\n  }\n  return false;\n}, \"hasHeader\");\n\n// src/hasHeaderWithPrefix.ts\nvar hasHeaderWithPrefix = /* @__PURE__ */ __name((headerPrefix, headers) => {\n  const soughtHeaderPrefix = headerPrefix.toLowerCase();\n  for (const headerName of Object.keys(headers)) {\n    if (headerName.toLowerCase().startsWith(soughtHeaderPrefix)) {\n      return true;\n    }\n  }\n  return false;\n}, \"hasHeaderWithPrefix\");\n\n// src/isStreaming.ts\nvar import_is_array_buffer = __webpack_require__(/*! @smithy/is-array-buffer */ \"(rsc)/../../../../node_modules/.pnpm/@smithy+is-array-buffer@3.0.0/node_modules/@smithy/is-array-buffer/dist-es/index.js\");\nvar isStreaming = /* @__PURE__ */ __name((body) => body !== void 0 && typeof body !== \"string\" && !ArrayBuffer.isView(body) && !(0, import_is_array_buffer.isArrayBuffer)(body), \"isStreaming\");\n\n// src/selectChecksumAlgorithmFunction.ts\nvar import_crc32c = __webpack_require__(/*! @aws-crypto/crc32c */ \"(rsc)/../../../../node_modules/.pnpm/@aws-crypto+crc32c@5.2.0/node_modules/@aws-crypto/crc32c/build/module/index.js\");\nvar import_getCrc32ChecksumAlgorithmFunction = __webpack_require__(/*! ././getCrc32ChecksumAlgorithmFunction */ \"(rsc)/../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/getCrc32ChecksumAlgorithmFunction.js\");\nvar selectChecksumAlgorithmFunction = /* @__PURE__ */ __name((checksumAlgorithm, config) => {\n  switch (checksumAlgorithm) {\n    case \"MD5\" /* MD5 */:\n      return config.md5;\n    case \"CRC32\" /* CRC32 */:\n      return (0, import_getCrc32ChecksumAlgorithmFunction.getCrc32ChecksumAlgorithmFunction)();\n    case \"CRC32C\" /* CRC32C */:\n      return import_crc32c.AwsCrc32c;\n    case \"SHA1\" /* SHA1 */:\n      return config.sha1;\n    case \"SHA256\" /* SHA256 */:\n      return config.sha256;\n    default:\n      throw new Error(`Unsupported checksum algorithm: ${checksumAlgorithm}`);\n  }\n}, \"selectChecksumAlgorithmFunction\");\n\n// src/stringHasher.ts\nvar import_util_utf8 = __webpack_require__(/*! @smithy/util-utf8 */ \"(rsc)/../../../../node_modules/.pnpm/@smithy+util-utf8@3.0.0/node_modules/@smithy/util-utf8/dist-es/index.js\");\nvar stringHasher = /* @__PURE__ */ __name((checksumAlgorithmFn, body) => {\n  const hash = new checksumAlgorithmFn();\n  hash.update((0, import_util_utf8.toUint8Array)(body || \"\"));\n  return hash.digest();\n}, \"stringHasher\");\n\n// src/flexibleChecksumsMiddleware.ts\nvar flexibleChecksumsMiddlewareOptions = {\n  name: \"flexibleChecksumsMiddleware\",\n  step: \"build\",\n  tags: [\"BODY_CHECKSUM\"],\n  override: true\n};\nvar flexibleChecksumsMiddleware = /* @__PURE__ */ __name((config, middlewareConfig) => (next, context) => async (args) => {\n  if (!import_protocol_http.HttpRequest.isInstance(args.request)) {\n    return next(args);\n  }\n  if (hasHeaderWithPrefix(\"x-amz-checksum-\", args.request.headers)) {\n    return next(args);\n  }\n  const { request, input } = args;\n  const { body: requestBody, headers } = request;\n  const { base64Encoder, streamHasher } = config;\n  const { requestChecksumRequired, requestAlgorithmMember } = middlewareConfig;\n  const checksumAlgorithm = getChecksumAlgorithmForRequest(\n    input,\n    {\n      requestChecksumRequired,\n      requestAlgorithmMember: requestAlgorithmMember == null ? void 0 : requestAlgorithmMember.name\n    },\n    !!context.isS3ExpressBucket\n  );\n  let updatedBody = requestBody;\n  let updatedHeaders = headers;\n  if (checksumAlgorithm) {\n    switch (checksumAlgorithm) {\n      case \"CRC32\" /* CRC32 */:\n        (0, import_core.setFeature)(context, \"FLEXIBLE_CHECKSUMS_REQ_CRC32\", \"U\");\n        break;\n      case \"CRC32C\" /* CRC32C */:\n        (0, import_core.setFeature)(context, \"FLEXIBLE_CHECKSUMS_REQ_CRC32C\", \"V\");\n        break;\n      case \"SHA1\" /* SHA1 */:\n        (0, import_core.setFeature)(context, \"FLEXIBLE_CHECKSUMS_REQ_SHA1\", \"X\");\n        break;\n      case \"SHA256\" /* SHA256 */:\n        (0, import_core.setFeature)(context, \"FLEXIBLE_CHECKSUMS_REQ_SHA256\", \"Y\");\n        break;\n    }\n    const checksumLocationName = getChecksumLocationName(checksumAlgorithm);\n    const checksumAlgorithmFn = selectChecksumAlgorithmFunction(checksumAlgorithm, config);\n    if (isStreaming(requestBody)) {\n      const { getAwsChunkedEncodingStream, bodyLengthChecker } = config;\n      updatedBody = getAwsChunkedEncodingStream(requestBody, {\n        base64Encoder,\n        bodyLengthChecker,\n        checksumLocationName,\n        checksumAlgorithmFn,\n        streamHasher\n      });\n      updatedHeaders = {\n        ...headers,\n        \"content-encoding\": headers[\"content-encoding\"] ? `${headers[\"content-encoding\"]},aws-chunked` : \"aws-chunked\",\n        \"transfer-encoding\": \"chunked\",\n        \"x-amz-decoded-content-length\": headers[\"content-length\"],\n        \"x-amz-content-sha256\": \"STREAMING-UNSIGNED-PAYLOAD-TRAILER\",\n        \"x-amz-trailer\": checksumLocationName\n      };\n      delete updatedHeaders[\"content-length\"];\n    } else if (!hasHeader(checksumLocationName, headers)) {\n      const rawChecksum = await stringHasher(checksumAlgorithmFn, requestBody);\n      updatedHeaders = {\n        ...headers,\n        [checksumLocationName]: base64Encoder(rawChecksum)\n      };\n    }\n  }\n  const result = await next({\n    ...args,\n    request: {\n      ...request,\n      headers: updatedHeaders,\n      body: updatedBody\n    }\n  });\n  return result;\n}, \"flexibleChecksumsMiddleware\");\n\n// src/flexibleChecksumsResponseMiddleware.ts\n\n\n// src/getChecksumAlgorithmListForResponse.ts\nvar getChecksumAlgorithmListForResponse = /* @__PURE__ */ __name((responseAlgorithms = []) => {\n  const validChecksumAlgorithms = [];\n  for (const algorithm of PRIORITY_ORDER_ALGORITHMS) {\n    if (!responseAlgorithms.includes(algorithm) || !CLIENT_SUPPORTED_ALGORITHMS.includes(algorithm)) {\n      continue;\n    }\n    validChecksumAlgorithms.push(algorithm);\n  }\n  return validChecksumAlgorithms;\n}, \"getChecksumAlgorithmListForResponse\");\n\n// src/isChecksumWithPartNumber.ts\nvar isChecksumWithPartNumber = /* @__PURE__ */ __name((checksum) => {\n  const lastHyphenIndex = checksum.lastIndexOf(\"-\");\n  if (lastHyphenIndex !== -1) {\n    const numberPart = checksum.slice(lastHyphenIndex + 1);\n    if (!numberPart.startsWith(\"0\")) {\n      const number = parseInt(numberPart, 10);\n      if (!isNaN(number) && number >= 1 && number <= 1e4) {\n        return true;\n      }\n    }\n  }\n  return false;\n}, \"isChecksumWithPartNumber\");\n\n// src/flexibleChecksumsResponseMiddleware.ts\nvar import_create_read_stream_on_buffer = __webpack_require__(/*! ./streams/create-read-stream-on-buffer */ \"(rsc)/../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/streams/create-read-stream-on-buffer.js\");\n\n// src/validateChecksumFromResponse.ts\nvar import_util_stream = __webpack_require__(/*! @smithy/util-stream */ \"(rsc)/../../../../node_modules/.pnpm/@smithy+util-stream@3.3.3/node_modules/@smithy/util-stream/dist-es/index.js\");\n\n// src/getChecksum.ts\nvar getChecksum = /* @__PURE__ */ __name(async (body, { checksumAlgorithmFn, base64Encoder }) => base64Encoder(await stringHasher(checksumAlgorithmFn, body)), \"getChecksum\");\n\n// src/validateChecksumFromResponse.ts\nvar validateChecksumFromResponse = /* @__PURE__ */ __name(async (response, { config, responseAlgorithms }) => {\n  const checksumAlgorithms = getChecksumAlgorithmListForResponse(responseAlgorithms);\n  const { body: responseBody, headers: responseHeaders } = response;\n  for (const algorithm of checksumAlgorithms) {\n    const responseHeader = getChecksumLocationName(algorithm);\n    const checksumFromResponse = responseHeaders[responseHeader];\n    if (checksumFromResponse) {\n      const checksumAlgorithmFn = selectChecksumAlgorithmFunction(algorithm, config);\n      const { base64Encoder } = config;\n      if (isStreaming(responseBody)) {\n        response.body = (0, import_util_stream.createChecksumStream)({\n          expectedChecksum: checksumFromResponse,\n          checksumSourceLocation: responseHeader,\n          checksum: new checksumAlgorithmFn(),\n          source: responseBody,\n          base64Encoder\n        });\n        return;\n      }\n      const checksum = await getChecksum(responseBody, { checksumAlgorithmFn, base64Encoder });\n      if (checksum === checksumFromResponse) {\n        break;\n      }\n      throw new Error(\n        `Checksum mismatch: expected \"${checksum}\" but received \"${checksumFromResponse}\" in response header \"${responseHeader}\".`\n      );\n    }\n  }\n}, \"validateChecksumFromResponse\");\n\n// src/flexibleChecksumsResponseMiddleware.ts\nvar flexibleChecksumsResponseMiddlewareOptions = {\n  name: \"flexibleChecksumsResponseMiddleware\",\n  toMiddleware: \"deserializerMiddleware\",\n  relation: \"after\",\n  tags: [\"BODY_CHECKSUM\"],\n  override: true\n};\nvar flexibleChecksumsResponseMiddleware = /* @__PURE__ */ __name((config, middlewareConfig) => (next, context) => async (args) => {\n  if (!import_protocol_http.HttpRequest.isInstance(args.request)) {\n    return next(args);\n  }\n  const input = args.input;\n  const result = await next(args);\n  const response = result.response;\n  let collectedStream = void 0;\n  const { requestValidationModeMember, responseAlgorithms } = middlewareConfig;\n  if (requestValidationModeMember && input[requestValidationModeMember] === \"ENABLED\") {\n    const { clientName, commandName } = context;\n    const isS3WholeObjectMultipartGetResponseChecksum = clientName === \"S3Client\" && commandName === \"GetObjectCommand\" && getChecksumAlgorithmListForResponse(responseAlgorithms).every((algorithm) => {\n      const responseHeader = getChecksumLocationName(algorithm);\n      const checksumFromResponse = response.headers[responseHeader];\n      return !checksumFromResponse || isChecksumWithPartNumber(checksumFromResponse);\n    });\n    if (isS3WholeObjectMultipartGetResponseChecksum) {\n      return result;\n    }\n    const isStreamingBody = isStreaming(response.body);\n    if (isStreamingBody) {\n      collectedStream = await config.streamCollector(response.body);\n      response.body = (0, import_create_read_stream_on_buffer.createReadStreamOnBuffer)(collectedStream);\n    }\n    await validateChecksumFromResponse(result.response, {\n      config,\n      responseAlgorithms\n    });\n    if (isStreamingBody && collectedStream) {\n      response.body = (0, import_create_read_stream_on_buffer.createReadStreamOnBuffer)(collectedStream);\n    }\n  }\n  return result;\n}, \"flexibleChecksumsResponseMiddleware\");\n\n// src/getFlexibleChecksumsPlugin.ts\nvar getFlexibleChecksumsPlugin = /* @__PURE__ */ __name((config, middlewareConfig) => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(flexibleChecksumsMiddleware(config, middlewareConfig), flexibleChecksumsMiddlewareOptions);\n    clientStack.addRelativeTo(\n      flexibleChecksumsResponseMiddleware(config, middlewareConfig),\n      flexibleChecksumsResponseMiddlewareOptions\n    );\n  }\n}), \"getFlexibleChecksumsPlugin\");\n\n// src/resolveFlexibleChecksumsConfig.ts\nvar import_util_middleware = __webpack_require__(/*! @smithy/util-middleware */ \"(rsc)/../../../../node_modules/.pnpm/@smithy+util-middleware@3.0.11/node_modules/@smithy/util-middleware/dist-es/index.js\");\nvar resolveFlexibleChecksumsConfig = /* @__PURE__ */ __name((input) => ({\n  ...input,\n  requestChecksumCalculation: (0, import_util_middleware.normalizeProvider)(\n    input.requestChecksumCalculation ?? DEFAULT_REQUEST_CHECKSUM_CALCULATION\n  ),\n  responseChecksumValidation: (0, import_util_middleware.normalizeProvider)(\n    input.responseChecksumValidation ?? DEFAULT_RESPONSE_CHECKSUM_VALIDATION\n  )\n}), \"resolveFlexibleChecksumsConfig\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (0);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK21pZGRsZXdhcmUtZmxleGlibGUtY2hlY2tzdW1zQDMuNzE3LjAvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtZmxleGlibGUtY2hlY2tzdW1zL2Rpc3QtY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsMkJBQTJCO0FBQ3ZGO0FBQ0E7QUFDQSw4QkFBOEIsa0NBQWtDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsNEZBQTRGO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxrQkFBa0IsYUFBYTs7QUFFbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9CQUFvQjtBQUMzQztBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixvQkFBb0I7QUFDM0M7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0JBQW9CO0FBQzNDO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMseUJBQXlCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3QkFBd0I7QUFDekI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsTUFBTSxHQUFHLElBQUkscUJBQXFCLHFCQUFxQixTQUFTLFNBQVM7QUFDaEg7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsNkhBQWU7QUFDekMsMkJBQTJCLG1CQUFPLENBQUMsbUpBQXVCOztBQUUxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNFQUFzRSxpREFBaUQ7QUFDdkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsa0JBQWtCLGtEQUFrRCw0QkFBNEI7QUFDakk7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLHNJQUFzSSx3QkFBd0I7O0FBRTlKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLDZCQUE2QixtQkFBTyxDQUFDLHlKQUF5QjtBQUM5RDs7QUFFQTtBQUNBLG9CQUFvQixtQkFBTyxDQUFDLCtJQUFvQjtBQUNoRCwrQ0FBK0MsbUJBQU8sQ0FBQyxvT0FBdUM7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsa0JBQWtCO0FBQzNFO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLHVCQUF1QixtQkFBTyxDQUFDLHVJQUFtQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsaUJBQWlCO0FBQzNCLFVBQVUsNkJBQTZCO0FBQ3ZDLFVBQVUsOEJBQThCO0FBQ3hDLFVBQVUsa0RBQWtEO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlEQUFpRDtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLDZEQUE2RCw0QkFBNEI7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDOztBQUVEOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0EsMENBQTBDLG1CQUFPLENBQUMsd09BQXdDOztBQUUxRjtBQUNBLHlCQUF5QixtQkFBTyxDQUFDLDZJQUFxQjs7QUFFdEQ7QUFDQSx3REFBd0Qsb0NBQW9DOztBQUU1RjtBQUNBLDZFQUE2RSw0QkFBNEI7QUFDekc7QUFDQSxVQUFVLCtDQUErQztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHlEQUF5RCxvQ0FBb0M7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsU0FBUyxrQkFBa0IscUJBQXFCLHdCQUF3QixlQUFlO0FBQy9IO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGtEQUFrRDtBQUM1RDtBQUNBLFlBQVksMEJBQTBCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLDZCQUE2QixtQkFBTyxDQUFDLDBKQUF5QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLE1BQU0sQ0FtQkwiLCJzb3VyY2VzIjpbIi9Vc2Vycy9lcmluamVycmkvbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK21pZGRsZXdhcmUtZmxleGlibGUtY2hlY2tzdW1zQDMuNzE3LjAvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtZmxleGlibGUtY2hlY2tzdW1zL2Rpc3QtY2pzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19uYW1lID0gKHRhcmdldCwgdmFsdWUpID0+IF9fZGVmUHJvcCh0YXJnZXQsIFwibmFtZVwiLCB7IHZhbHVlLCBjb25maWd1cmFibGU6IHRydWUgfSk7XG52YXIgX19leHBvcnQgPSAodGFyZ2V0LCBhbGwpID0+IHtcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXG4gICAgX19kZWZQcm9wKHRhcmdldCwgbmFtZSwgeyBnZXQ6IGFsbFtuYW1lXSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbn07XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xuICB9XG4gIHJldHVybiB0bztcbn07XG52YXIgX190b0NvbW1vbkpTID0gKG1vZCkgPT4gX19jb3B5UHJvcHMoX19kZWZQcm9wKHt9LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KSwgbW9kKTtcblxuLy8gc3JjL2luZGV4LnRzXG52YXIgc3JjX2V4cG9ydHMgPSB7fTtcbl9fZXhwb3J0KHNyY19leHBvcnRzLCB7XG4gIENPTkZJR19SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OOiAoKSA9PiBDT05GSUdfUkVRVUVTVF9DSEVDS1NVTV9DQUxDVUxBVElPTixcbiAgQ09ORklHX1JFU1BPTlNFX0NIRUNLU1VNX1ZBTElEQVRJT046ICgpID0+IENPTkZJR19SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OLFxuICBDaGVja3N1bUFsZ29yaXRobTogKCkgPT4gQ2hlY2tzdW1BbGdvcml0aG0sXG4gIENoZWNrc3VtTG9jYXRpb246ICgpID0+IENoZWNrc3VtTG9jYXRpb24sXG4gIERFRkFVTFRfQ0hFQ0tTVU1fQUxHT1JJVEhNOiAoKSA9PiBERUZBVUxUX0NIRUNLU1VNX0FMR09SSVRITSxcbiAgREVGQVVMVF9SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OOiAoKSA9PiBERUZBVUxUX1JFUVVFU1RfQ0hFQ0tTVU1fQ0FMQ1VMQVRJT04sXG4gIERFRkFVTFRfUkVTUE9OU0VfQ0hFQ0tTVU1fVkFMSURBVElPTjogKCkgPT4gREVGQVVMVF9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OLFxuICBFTlZfUkVRVUVTVF9DSEVDS1NVTV9DQUxDVUxBVElPTjogKCkgPT4gRU5WX1JFUVVFU1RfQ0hFQ0tTVU1fQ0FMQ1VMQVRJT04sXG4gIEVOVl9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OOiAoKSA9PiBFTlZfUkVTUE9OU0VfQ0hFQ0tTVU1fVkFMSURBVElPTixcbiAgTk9ERV9SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OX0NPTkZJR19PUFRJT05TOiAoKSA9PiBOT0RFX1JFUVVFU1RfQ0hFQ0tTVU1fQ0FMQ1VMQVRJT05fQ09ORklHX09QVElPTlMsXG4gIE5PREVfUkVTUE9OU0VfQ0hFQ0tTVU1fVkFMSURBVElPTl9DT05GSUdfT1BUSU9OUzogKCkgPT4gTk9ERV9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OX0NPTkZJR19PUFRJT05TLFxuICBSZXF1ZXN0Q2hlY2tzdW1DYWxjdWxhdGlvbjogKCkgPT4gUmVxdWVzdENoZWNrc3VtQ2FsY3VsYXRpb24sXG4gIFJlc3BvbnNlQ2hlY2tzdW1WYWxpZGF0aW9uOiAoKSA9PiBSZXNwb25zZUNoZWNrc3VtVmFsaWRhdGlvbixcbiAgUzNfRVhQUkVTU19ERUZBVUxUX0NIRUNLU1VNX0FMR09SSVRITTogKCkgPT4gUzNfRVhQUkVTU19ERUZBVUxUX0NIRUNLU1VNX0FMR09SSVRITSxcbiAgZmxleGlibGVDaGVja3N1bXNNaWRkbGV3YXJlOiAoKSA9PiBmbGV4aWJsZUNoZWNrc3Vtc01pZGRsZXdhcmUsXG4gIGZsZXhpYmxlQ2hlY2tzdW1zTWlkZGxld2FyZU9wdGlvbnM6ICgpID0+IGZsZXhpYmxlQ2hlY2tzdW1zTWlkZGxld2FyZU9wdGlvbnMsXG4gIGdldEZsZXhpYmxlQ2hlY2tzdW1zUGx1Z2luOiAoKSA9PiBnZXRGbGV4aWJsZUNoZWNrc3Vtc1BsdWdpbixcbiAgcmVzb2x2ZUZsZXhpYmxlQ2hlY2tzdW1zQ29uZmlnOiAoKSA9PiByZXNvbHZlRmxleGlibGVDaGVja3N1bXNDb25maWdcbn0pO1xubW9kdWxlLmV4cG9ydHMgPSBfX3RvQ29tbW9uSlMoc3JjX2V4cG9ydHMpO1xuXG4vLyBzcmMvY29uc3RhbnRzLnRzXG52YXIgUmVxdWVzdENoZWNrc3VtQ2FsY3VsYXRpb24gPSB7XG4gIC8qKlxuICAgKiBXaGVuIHNldCwgYSBjaGVja3N1bSB3aWxsIGJlIGNhbGN1bGF0ZWQgZm9yIGFsbCByZXF1ZXN0IHBheWxvYWRzIG9mIG9wZXJhdGlvbnNcbiAgICogbW9kZWxlZCB3aXRoIHRoZSB7QGxpbmsgaHR0cENoZWNrc3VtfSB0cmFpdCB3aGVyZSBgcmVxdWVzdENoZWNrc3VtUmVxdWlyZWRgIGlzIGB0cnVlYFxuICAgKiBBTkQvT1IgYSBgcmVxdWVzdEFsZ29yaXRobU1lbWJlcmAgaXMgbW9kZWxlZC5cbiAgICoge0BsaW5rIGh0dHBzOi8vc21pdGh5LmlvLzIuMC9hd3MvYXdzLWNvcmUuaHRtbCNhd3MtcHJvdG9jb2xzLWh0dHBjaGVja3N1bS10cmFpdCBodHRwQ2hlY2tzdW19XG4gICAqL1xuICBXSEVOX1NVUFBPUlRFRDogXCJXSEVOX1NVUFBPUlRFRFwiLFxuICAvKipcbiAgICogV2hlbiBzZXQsIGEgY2hlY2tzdW0gd2lsbCBvbmx5IGJlIGNhbGN1bGF0ZWQgZm9yIHJlcXVlc3QgcGF5bG9hZHMgb2Ygb3BlcmF0aW9uc1xuICAgKiBtb2RlbGVkIHdpdGggdGhlIHtAbGluayBodHRwQ2hlY2tzdW19IHRyYWl0IHdoZXJlIGByZXF1ZXN0Q2hlY2tzdW1SZXF1aXJlZGAgaXMgYHRydWVgXG4gICAqIE9SIHdoZXJlIGEgYHJlcXVlc3RBbGdvcml0aG1NZW1iZXJgIGlzIG1vZGVsZWQgYW5kIHRoZSB1c2VyIHNldHMgaXQuXG4gICAqIHtAbGluayBodHRwczovL3NtaXRoeS5pby8yLjAvYXdzL2F3cy1jb3JlLmh0bWwjYXdzLXByb3RvY29scy1odHRwY2hlY2tzdW0tdHJhaXQgaHR0cENoZWNrc3VtfVxuICAgKi9cbiAgV0hFTl9SRVFVSVJFRDogXCJXSEVOX1JFUVVJUkVEXCJcbn07XG52YXIgREVGQVVMVF9SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OID0gUmVxdWVzdENoZWNrc3VtQ2FsY3VsYXRpb24uV0hFTl9TVVBQT1JURUQ7XG52YXIgUmVzcG9uc2VDaGVja3N1bVZhbGlkYXRpb24gPSB7XG4gIC8qKlxuICAgKiBXaGVuIHNldCwgY2hlY2tzdW0gdmFsaWRhdGlvbiBNVVNUIGJlIHBlcmZvcm1lZCBvbiBhbGwgcmVzcG9uc2UgcGF5bG9hZHMgb2Ygb3BlcmF0aW9uc1xuICAgKiBtb2RlbGVkIHdpdGggdGhlIHtAbGluayBodHRwQ2hlY2tzdW19IHRyYWl0IHdoZXJlIGByZXNwb25zZUFsZ29yaXRobXNgIGlzIG1vZGVsZWQsXG4gICAqIGV4Y2VwdCB3aGVuIG5vIG1vZGVsZWQgY2hlY2tzdW0gYWxnb3JpdGhtcyBhcmUgc3VwcG9ydGVkIGJ5IGFuIFNESy5cbiAgICoge0BsaW5rIGh0dHBzOi8vc21pdGh5LmlvLzIuMC9hd3MvYXdzLWNvcmUuaHRtbCNhd3MtcHJvdG9jb2xzLWh0dHBjaGVja3N1bS10cmFpdCBodHRwQ2hlY2tzdW19XG4gICAqL1xuICBXSEVOX1NVUFBPUlRFRDogXCJXSEVOX1NVUFBPUlRFRFwiLFxuICAvKipcbiAgICogV2hlbiBzZXQsIGNoZWNrc3VtIHZhbGlkYXRpb24gTVVTVCBOT1QgYmUgcGVyZm9ybWVkIG9uIHJlc3BvbnNlIHBheWxvYWRzIG9mIG9wZXJhdGlvbnMgVU5MRVNTXG4gICAqIHRoZSBTREsgc3VwcG9ydHMgdGhlIG1vZGVsZWQgY2hlY2tzdW0gYWxnb3JpdGhtcyBBTkQgdGhlIHVzZXIgaGFzIHNldCB0aGUgYHJlcXVlc3RWYWxpZGF0aW9uTW9kZU1lbWJlcmAgdG8gYEVOQUJMRURgLlxuICAgKiBJdCBpcyBjdXJyZW50bHkgaW1wb3NzaWJsZSB0byBtb2RlbCBhbiBvcGVyYXRpb24gYXMgcmVxdWlyaW5nIGEgcmVzcG9uc2UgY2hlY2tzdW0sXG4gICAqIGJ1dCB0aGlzIHNldHRpbmcgbGVhdmVzIHRoZSBkb29yIG9wZW4gZm9yIGZ1dHVyZSB1cGRhdGVzLlxuICAgKi9cbiAgV0hFTl9SRVFVSVJFRDogXCJXSEVOX1JFUVVJUkVEXCJcbn07XG52YXIgREVGQVVMVF9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OID0gUmVxdWVzdENoZWNrc3VtQ2FsY3VsYXRpb24uV0hFTl9TVVBQT1JURUQ7XG52YXIgQ2hlY2tzdW1BbGdvcml0aG0gPSAvKiBAX19QVVJFX18gKi8gKChDaGVja3N1bUFsZ29yaXRobTMpID0+IHtcbiAgQ2hlY2tzdW1BbGdvcml0aG0zW1wiTUQ1XCJdID0gXCJNRDVcIjtcbiAgQ2hlY2tzdW1BbGdvcml0aG0zW1wiQ1JDMzJcIl0gPSBcIkNSQzMyXCI7XG4gIENoZWNrc3VtQWxnb3JpdGhtM1tcIkNSQzMyQ1wiXSA9IFwiQ1JDMzJDXCI7XG4gIENoZWNrc3VtQWxnb3JpdGhtM1tcIlNIQTFcIl0gPSBcIlNIQTFcIjtcbiAgQ2hlY2tzdW1BbGdvcml0aG0zW1wiU0hBMjU2XCJdID0gXCJTSEEyNTZcIjtcbiAgcmV0dXJuIENoZWNrc3VtQWxnb3JpdGhtMztcbn0pKENoZWNrc3VtQWxnb3JpdGhtIHx8IHt9KTtcbnZhciBDaGVja3N1bUxvY2F0aW9uID0gLyogQF9fUFVSRV9fICovICgoQ2hlY2tzdW1Mb2NhdGlvbjIpID0+IHtcbiAgQ2hlY2tzdW1Mb2NhdGlvbjJbXCJIRUFERVJcIl0gPSBcImhlYWRlclwiO1xuICBDaGVja3N1bUxvY2F0aW9uMltcIlRSQUlMRVJcIl0gPSBcInRyYWlsZXJcIjtcbiAgcmV0dXJuIENoZWNrc3VtTG9jYXRpb24yO1xufSkoQ2hlY2tzdW1Mb2NhdGlvbiB8fCB7fSk7XG52YXIgREVGQVVMVF9DSEVDS1NVTV9BTEdPUklUSE0gPSBcIk1ENVwiIC8qIE1ENSAqLztcbnZhciBTM19FWFBSRVNTX0RFRkFVTFRfQ0hFQ0tTVU1fQUxHT1JJVEhNID0gXCJDUkMzMlwiIC8qIENSQzMyICovO1xuXG4vLyBzcmMvc3RyaW5nVW5pb25TZWxlY3Rvci50c1xudmFyIHN0cmluZ1VuaW9uU2VsZWN0b3IgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChvYmosIGtleSwgdW5pb24sIHR5cGUpID0+IHtcbiAgaWYgKCEoa2V5IGluIG9iaikpXG4gICAgcmV0dXJuIHZvaWQgMDtcbiAgY29uc3QgdmFsdWUgPSBvYmpba2V5XS50b1VwcGVyQ2FzZSgpO1xuICBpZiAoIU9iamVjdC52YWx1ZXModW5pb24pLmluY2x1ZGVzKHZhbHVlKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYENhbm5vdCBsb2FkICR7dHlwZX0gJyR7a2V5fScuIEV4cGVjdGVkIG9uZSBvZiAke09iamVjdC52YWx1ZXModW5pb24pfSwgZ290ICcke29ialtrZXldfScuYCk7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufSwgXCJzdHJpbmdVbmlvblNlbGVjdG9yXCIpO1xuXG4vLyBzcmMvTk9ERV9SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OX0NPTkZJR19PUFRJT05TLnRzXG52YXIgRU5WX1JFUVVFU1RfQ0hFQ0tTVU1fQ0FMQ1VMQVRJT04gPSBcIkFXU19SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OXCI7XG52YXIgQ09ORklHX1JFUVVFU1RfQ0hFQ0tTVU1fQ0FMQ1VMQVRJT04gPSBcInJlcXVlc3RfY2hlY2tzdW1fY2FsY3VsYXRpb25cIjtcbnZhciBOT0RFX1JFUVVFU1RfQ0hFQ0tTVU1fQ0FMQ1VMQVRJT05fQ09ORklHX09QVElPTlMgPSB7XG4gIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogKGVudikgPT4gc3RyaW5nVW5pb25TZWxlY3RvcihlbnYsIEVOVl9SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OLCBSZXF1ZXN0Q2hlY2tzdW1DYWxjdWxhdGlvbiwgXCJlbnZcIiAvKiBFTlYgKi8pLFxuICBjb25maWdGaWxlU2VsZWN0b3I6IChwcm9maWxlKSA9PiBzdHJpbmdVbmlvblNlbGVjdG9yKHByb2ZpbGUsIENPTkZJR19SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OLCBSZXF1ZXN0Q2hlY2tzdW1DYWxjdWxhdGlvbiwgXCJzaGFyZWQgY29uZmlnIGVudHJ5XCIgLyogQ09ORklHICovKSxcbiAgZGVmYXVsdDogREVGQVVMVF9SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OXG59O1xuXG4vLyBzcmMvTk9ERV9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OX0NPTkZJR19PUFRJT05TLnRzXG52YXIgRU5WX1JFU1BPTlNFX0NIRUNLU1VNX1ZBTElEQVRJT04gPSBcIkFXU19SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OXCI7XG52YXIgQ09ORklHX1JFU1BPTlNFX0NIRUNLU1VNX1ZBTElEQVRJT04gPSBcInJlc3BvbnNlX2NoZWNrc3VtX3ZhbGlkYXRpb25cIjtcbnZhciBOT0RFX1JFU1BPTlNFX0NIRUNLU1VNX1ZBTElEQVRJT05fQ09ORklHX09QVElPTlMgPSB7XG4gIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogKGVudikgPT4gc3RyaW5nVW5pb25TZWxlY3RvcihlbnYsIEVOVl9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OLCBSZXNwb25zZUNoZWNrc3VtVmFsaWRhdGlvbiwgXCJlbnZcIiAvKiBFTlYgKi8pLFxuICBjb25maWdGaWxlU2VsZWN0b3I6IChwcm9maWxlKSA9PiBzdHJpbmdVbmlvblNlbGVjdG9yKHByb2ZpbGUsIENPTkZJR19SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OLCBSZXNwb25zZUNoZWNrc3VtVmFsaWRhdGlvbiwgXCJzaGFyZWQgY29uZmlnIGVudHJ5XCIgLyogQ09ORklHICovKSxcbiAgZGVmYXVsdDogREVGQVVMVF9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OXG59O1xuXG4vLyBzcmMvZmxleGlibGVDaGVja3N1bXNNaWRkbGV3YXJlLnRzXG52YXIgaW1wb3J0X2NvcmUgPSByZXF1aXJlKFwiQGF3cy1zZGsvY29yZVwiKTtcbnZhciBpbXBvcnRfcHJvdG9jb2xfaHR0cCA9IHJlcXVpcmUoXCJAc21pdGh5L3Byb3RvY29sLWh0dHBcIik7XG5cbi8vIHNyYy90eXBlcy50c1xudmFyIENMSUVOVF9TVVBQT1JURURfQUxHT1JJVEhNUyA9IFtcbiAgXCJDUkMzMlwiIC8qIENSQzMyICovLFxuICBcIkNSQzMyQ1wiIC8qIENSQzMyQyAqLyxcbiAgXCJTSEExXCIgLyogU0hBMSAqLyxcbiAgXCJTSEEyNTZcIiAvKiBTSEEyNTYgKi9cbl07XG52YXIgUFJJT1JJVFlfT1JERVJfQUxHT1JJVEhNUyA9IFtcbiAgXCJTSEEyNTZcIiAvKiBTSEEyNTYgKi8sXG4gIFwiU0hBMVwiIC8qIFNIQTEgKi8sXG4gIFwiQ1JDMzJcIiAvKiBDUkMzMiAqLyxcbiAgXCJDUkMzMkNcIiAvKiBDUkMzMkMgKi9cbl07XG5cbi8vIHNyYy9nZXRDaGVja3N1bUFsZ29yaXRobUZvclJlcXVlc3QudHNcbnZhciBnZXRDaGVja3N1bUFsZ29yaXRobUZvclJlcXVlc3QgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChpbnB1dCwgeyByZXF1ZXN0Q2hlY2tzdW1SZXF1aXJlZCwgcmVxdWVzdEFsZ29yaXRobU1lbWJlciB9LCBpc1MzRXhwcmVzcykgPT4ge1xuICBjb25zdCBkZWZhdWx0QWxnb3JpdGhtID0gaXNTM0V4cHJlc3MgPyBTM19FWFBSRVNTX0RFRkFVTFRfQ0hFQ0tTVU1fQUxHT1JJVEhNIDogREVGQVVMVF9DSEVDS1NVTV9BTEdPUklUSE07XG4gIGlmICghcmVxdWVzdEFsZ29yaXRobU1lbWJlciB8fCAhaW5wdXRbcmVxdWVzdEFsZ29yaXRobU1lbWJlcl0pIHtcbiAgICByZXR1cm4gcmVxdWVzdENoZWNrc3VtUmVxdWlyZWQgPyBkZWZhdWx0QWxnb3JpdGhtIDogdm9pZCAwO1xuICB9XG4gIGNvbnN0IGNoZWNrc3VtQWxnb3JpdGhtID0gaW5wdXRbcmVxdWVzdEFsZ29yaXRobU1lbWJlcl07XG4gIGlmICghQ0xJRU5UX1NVUFBPUlRFRF9BTEdPUklUSE1TLmluY2x1ZGVzKGNoZWNrc3VtQWxnb3JpdGhtKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBUaGUgY2hlY2tzdW0gYWxnb3JpdGhtIFwiJHtjaGVja3N1bUFsZ29yaXRobX1cIiBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBjbGllbnQuIFNlbGVjdCBvbmUgb2YgJHtDTElFTlRfU1VQUE9SVEVEX0FMR09SSVRITVN9LmBcbiAgICApO1xuICB9XG4gIHJldHVybiBjaGVja3N1bUFsZ29yaXRobTtcbn0sIFwiZ2V0Q2hlY2tzdW1BbGdvcml0aG1Gb3JSZXF1ZXN0XCIpO1xuXG4vLyBzcmMvZ2V0Q2hlY2tzdW1Mb2NhdGlvbk5hbWUudHNcbnZhciBnZXRDaGVja3N1bUxvY2F0aW9uTmFtZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGFsZ29yaXRobSkgPT4gYWxnb3JpdGhtID09PSBcIk1ENVwiIC8qIE1ENSAqLyA/IFwiY29udGVudC1tZDVcIiA6IGB4LWFtei1jaGVja3N1bS0ke2FsZ29yaXRobS50b0xvd2VyQ2FzZSgpfWAsIFwiZ2V0Q2hlY2tzdW1Mb2NhdGlvbk5hbWVcIik7XG5cbi8vIHNyYy9oYXNIZWFkZXIudHNcbnZhciBoYXNIZWFkZXIgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChoZWFkZXIsIGhlYWRlcnMpID0+IHtcbiAgY29uc3Qgc291Z2h0SGVhZGVyID0gaGVhZGVyLnRvTG93ZXJDYXNlKCk7XG4gIGZvciAoY29uc3QgaGVhZGVyTmFtZSBvZiBPYmplY3Qua2V5cyhoZWFkZXJzKSkge1xuICAgIGlmIChzb3VnaHRIZWFkZXIgPT09IGhlYWRlck5hbWUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn0sIFwiaGFzSGVhZGVyXCIpO1xuXG4vLyBzcmMvaGFzSGVhZGVyV2l0aFByZWZpeC50c1xudmFyIGhhc0hlYWRlcldpdGhQcmVmaXggPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChoZWFkZXJQcmVmaXgsIGhlYWRlcnMpID0+IHtcbiAgY29uc3Qgc291Z2h0SGVhZGVyUHJlZml4ID0gaGVhZGVyUHJlZml4LnRvTG93ZXJDYXNlKCk7XG4gIGZvciAoY29uc3QgaGVhZGVyTmFtZSBvZiBPYmplY3Qua2V5cyhoZWFkZXJzKSkge1xuICAgIGlmIChoZWFkZXJOYW1lLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChzb3VnaHRIZWFkZXJQcmVmaXgpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufSwgXCJoYXNIZWFkZXJXaXRoUHJlZml4XCIpO1xuXG4vLyBzcmMvaXNTdHJlYW1pbmcudHNcbnZhciBpbXBvcnRfaXNfYXJyYXlfYnVmZmVyID0gcmVxdWlyZShcIkBzbWl0aHkvaXMtYXJyYXktYnVmZmVyXCIpO1xudmFyIGlzU3RyZWFtaW5nID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoYm9keSkgPT4gYm9keSAhPT0gdm9pZCAwICYmIHR5cGVvZiBib2R5ICE9PSBcInN0cmluZ1wiICYmICFBcnJheUJ1ZmZlci5pc1ZpZXcoYm9keSkgJiYgISgwLCBpbXBvcnRfaXNfYXJyYXlfYnVmZmVyLmlzQXJyYXlCdWZmZXIpKGJvZHkpLCBcImlzU3RyZWFtaW5nXCIpO1xuXG4vLyBzcmMvc2VsZWN0Q2hlY2tzdW1BbGdvcml0aG1GdW5jdGlvbi50c1xudmFyIGltcG9ydF9jcmMzMmMgPSByZXF1aXJlKFwiQGF3cy1jcnlwdG8vY3JjMzJjXCIpO1xudmFyIGltcG9ydF9nZXRDcmMzMkNoZWNrc3VtQWxnb3JpdGhtRnVuY3Rpb24gPSByZXF1aXJlKFwiLi8uL2dldENyYzMyQ2hlY2tzdW1BbGdvcml0aG1GdW5jdGlvblwiKTtcbnZhciBzZWxlY3RDaGVja3N1bUFsZ29yaXRobUZ1bmN0aW9uID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoY2hlY2tzdW1BbGdvcml0aG0sIGNvbmZpZykgPT4ge1xuICBzd2l0Y2ggKGNoZWNrc3VtQWxnb3JpdGhtKSB7XG4gICAgY2FzZSBcIk1ENVwiIC8qIE1ENSAqLzpcbiAgICAgIHJldHVybiBjb25maWcubWQ1O1xuICAgIGNhc2UgXCJDUkMzMlwiIC8qIENSQzMyICovOlxuICAgICAgcmV0dXJuICgwLCBpbXBvcnRfZ2V0Q3JjMzJDaGVja3N1bUFsZ29yaXRobUZ1bmN0aW9uLmdldENyYzMyQ2hlY2tzdW1BbGdvcml0aG1GdW5jdGlvbikoKTtcbiAgICBjYXNlIFwiQ1JDMzJDXCIgLyogQ1JDMzJDICovOlxuICAgICAgcmV0dXJuIGltcG9ydF9jcmMzMmMuQXdzQ3JjMzJjO1xuICAgIGNhc2UgXCJTSEExXCIgLyogU0hBMSAqLzpcbiAgICAgIHJldHVybiBjb25maWcuc2hhMTtcbiAgICBjYXNlIFwiU0hBMjU2XCIgLyogU0hBMjU2ICovOlxuICAgICAgcmV0dXJuIGNvbmZpZy5zaGEyNTY7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgY2hlY2tzdW0gYWxnb3JpdGhtOiAke2NoZWNrc3VtQWxnb3JpdGhtfWApO1xuICB9XG59LCBcInNlbGVjdENoZWNrc3VtQWxnb3JpdGhtRnVuY3Rpb25cIik7XG5cbi8vIHNyYy9zdHJpbmdIYXNoZXIudHNcbnZhciBpbXBvcnRfdXRpbF91dGY4ID0gcmVxdWlyZShcIkBzbWl0aHkvdXRpbC11dGY4XCIpO1xudmFyIHN0cmluZ0hhc2hlciA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGNoZWNrc3VtQWxnb3JpdGhtRm4sIGJvZHkpID0+IHtcbiAgY29uc3QgaGFzaCA9IG5ldyBjaGVja3N1bUFsZ29yaXRobUZuKCk7XG4gIGhhc2gudXBkYXRlKCgwLCBpbXBvcnRfdXRpbF91dGY4LnRvVWludDhBcnJheSkoYm9keSB8fCBcIlwiKSk7XG4gIHJldHVybiBoYXNoLmRpZ2VzdCgpO1xufSwgXCJzdHJpbmdIYXNoZXJcIik7XG5cbi8vIHNyYy9mbGV4aWJsZUNoZWNrc3Vtc01pZGRsZXdhcmUudHNcbnZhciBmbGV4aWJsZUNoZWNrc3Vtc01pZGRsZXdhcmVPcHRpb25zID0ge1xuICBuYW1lOiBcImZsZXhpYmxlQ2hlY2tzdW1zTWlkZGxld2FyZVwiLFxuICBzdGVwOiBcImJ1aWxkXCIsXG4gIHRhZ3M6IFtcIkJPRFlfQ0hFQ0tTVU1cIl0sXG4gIG92ZXJyaWRlOiB0cnVlXG59O1xudmFyIGZsZXhpYmxlQ2hlY2tzdW1zTWlkZGxld2FyZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGNvbmZpZywgbWlkZGxld2FyZUNvbmZpZykgPT4gKG5leHQsIGNvbnRleHQpID0+IGFzeW5jIChhcmdzKSA9PiB7XG4gIGlmICghaW1wb3J0X3Byb3RvY29sX2h0dHAuSHR0cFJlcXVlc3QuaXNJbnN0YW5jZShhcmdzLnJlcXVlc3QpKSB7XG4gICAgcmV0dXJuIG5leHQoYXJncyk7XG4gIH1cbiAgaWYgKGhhc0hlYWRlcldpdGhQcmVmaXgoXCJ4LWFtei1jaGVja3N1bS1cIiwgYXJncy5yZXF1ZXN0LmhlYWRlcnMpKSB7XG4gICAgcmV0dXJuIG5leHQoYXJncyk7XG4gIH1cbiAgY29uc3QgeyByZXF1ZXN0LCBpbnB1dCB9ID0gYXJncztcbiAgY29uc3QgeyBib2R5OiByZXF1ZXN0Qm9keSwgaGVhZGVycyB9ID0gcmVxdWVzdDtcbiAgY29uc3QgeyBiYXNlNjRFbmNvZGVyLCBzdHJlYW1IYXNoZXIgfSA9IGNvbmZpZztcbiAgY29uc3QgeyByZXF1ZXN0Q2hlY2tzdW1SZXF1aXJlZCwgcmVxdWVzdEFsZ29yaXRobU1lbWJlciB9ID0gbWlkZGxld2FyZUNvbmZpZztcbiAgY29uc3QgY2hlY2tzdW1BbGdvcml0aG0gPSBnZXRDaGVja3N1bUFsZ29yaXRobUZvclJlcXVlc3QoXG4gICAgaW5wdXQsXG4gICAge1xuICAgICAgcmVxdWVzdENoZWNrc3VtUmVxdWlyZWQsXG4gICAgICByZXF1ZXN0QWxnb3JpdGhtTWVtYmVyOiByZXF1ZXN0QWxnb3JpdGhtTWVtYmVyID09IG51bGwgPyB2b2lkIDAgOiByZXF1ZXN0QWxnb3JpdGhtTWVtYmVyLm5hbWVcbiAgICB9LFxuICAgICEhY29udGV4dC5pc1MzRXhwcmVzc0J1Y2tldFxuICApO1xuICBsZXQgdXBkYXRlZEJvZHkgPSByZXF1ZXN0Qm9keTtcbiAgbGV0IHVwZGF0ZWRIZWFkZXJzID0gaGVhZGVycztcbiAgaWYgKGNoZWNrc3VtQWxnb3JpdGhtKSB7XG4gICAgc3dpdGNoIChjaGVja3N1bUFsZ29yaXRobSkge1xuICAgICAgY2FzZSBcIkNSQzMyXCIgLyogQ1JDMzIgKi86XG4gICAgICAgICgwLCBpbXBvcnRfY29yZS5zZXRGZWF0dXJlKShjb250ZXh0LCBcIkZMRVhJQkxFX0NIRUNLU1VNU19SRVFfQ1JDMzJcIiwgXCJVXCIpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJDUkMzMkNcIiAvKiBDUkMzMkMgKi86XG4gICAgICAgICgwLCBpbXBvcnRfY29yZS5zZXRGZWF0dXJlKShjb250ZXh0LCBcIkZMRVhJQkxFX0NIRUNLU1VNU19SRVFfQ1JDMzJDXCIsIFwiVlwiKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiU0hBMVwiIC8qIFNIQTEgKi86XG4gICAgICAgICgwLCBpbXBvcnRfY29yZS5zZXRGZWF0dXJlKShjb250ZXh0LCBcIkZMRVhJQkxFX0NIRUNLU1VNU19SRVFfU0hBMVwiLCBcIlhcIik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIlNIQTI1NlwiIC8qIFNIQTI1NiAqLzpcbiAgICAgICAgKDAsIGltcG9ydF9jb3JlLnNldEZlYXR1cmUpKGNvbnRleHQsIFwiRkxFWElCTEVfQ0hFQ0tTVU1TX1JFUV9TSEEyNTZcIiwgXCJZXCIpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgY29uc3QgY2hlY2tzdW1Mb2NhdGlvbk5hbWUgPSBnZXRDaGVja3N1bUxvY2F0aW9uTmFtZShjaGVja3N1bUFsZ29yaXRobSk7XG4gICAgY29uc3QgY2hlY2tzdW1BbGdvcml0aG1GbiA9IHNlbGVjdENoZWNrc3VtQWxnb3JpdGhtRnVuY3Rpb24oY2hlY2tzdW1BbGdvcml0aG0sIGNvbmZpZyk7XG4gICAgaWYgKGlzU3RyZWFtaW5nKHJlcXVlc3RCb2R5KSkge1xuICAgICAgY29uc3QgeyBnZXRBd3NDaHVua2VkRW5jb2RpbmdTdHJlYW0sIGJvZHlMZW5ndGhDaGVja2VyIH0gPSBjb25maWc7XG4gICAgICB1cGRhdGVkQm9keSA9IGdldEF3c0NodW5rZWRFbmNvZGluZ1N0cmVhbShyZXF1ZXN0Qm9keSwge1xuICAgICAgICBiYXNlNjRFbmNvZGVyLFxuICAgICAgICBib2R5TGVuZ3RoQ2hlY2tlcixcbiAgICAgICAgY2hlY2tzdW1Mb2NhdGlvbk5hbWUsXG4gICAgICAgIGNoZWNrc3VtQWxnb3JpdGhtRm4sXG4gICAgICAgIHN0cmVhbUhhc2hlclxuICAgICAgfSk7XG4gICAgICB1cGRhdGVkSGVhZGVycyA9IHtcbiAgICAgICAgLi4uaGVhZGVycyxcbiAgICAgICAgXCJjb250ZW50LWVuY29kaW5nXCI6IGhlYWRlcnNbXCJjb250ZW50LWVuY29kaW5nXCJdID8gYCR7aGVhZGVyc1tcImNvbnRlbnQtZW5jb2RpbmdcIl19LGF3cy1jaHVua2VkYCA6IFwiYXdzLWNodW5rZWRcIixcbiAgICAgICAgXCJ0cmFuc2Zlci1lbmNvZGluZ1wiOiBcImNodW5rZWRcIixcbiAgICAgICAgXCJ4LWFtei1kZWNvZGVkLWNvbnRlbnQtbGVuZ3RoXCI6IGhlYWRlcnNbXCJjb250ZW50LWxlbmd0aFwiXSxcbiAgICAgICAgXCJ4LWFtei1jb250ZW50LXNoYTI1NlwiOiBcIlNUUkVBTUlORy1VTlNJR05FRC1QQVlMT0FELVRSQUlMRVJcIixcbiAgICAgICAgXCJ4LWFtei10cmFpbGVyXCI6IGNoZWNrc3VtTG9jYXRpb25OYW1lXG4gICAgICB9O1xuICAgICAgZGVsZXRlIHVwZGF0ZWRIZWFkZXJzW1wiY29udGVudC1sZW5ndGhcIl07XG4gICAgfSBlbHNlIGlmICghaGFzSGVhZGVyKGNoZWNrc3VtTG9jYXRpb25OYW1lLCBoZWFkZXJzKSkge1xuICAgICAgY29uc3QgcmF3Q2hlY2tzdW0gPSBhd2FpdCBzdHJpbmdIYXNoZXIoY2hlY2tzdW1BbGdvcml0aG1GbiwgcmVxdWVzdEJvZHkpO1xuICAgICAgdXBkYXRlZEhlYWRlcnMgPSB7XG4gICAgICAgIC4uLmhlYWRlcnMsXG4gICAgICAgIFtjaGVja3N1bUxvY2F0aW9uTmFtZV06IGJhc2U2NEVuY29kZXIocmF3Q2hlY2tzdW0pXG4gICAgICB9O1xuICAgIH1cbiAgfVxuICBjb25zdCByZXN1bHQgPSBhd2FpdCBuZXh0KHtcbiAgICAuLi5hcmdzLFxuICAgIHJlcXVlc3Q6IHtcbiAgICAgIC4uLnJlcXVlc3QsXG4gICAgICBoZWFkZXJzOiB1cGRhdGVkSGVhZGVycyxcbiAgICAgIGJvZHk6IHVwZGF0ZWRCb2R5XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn0sIFwiZmxleGlibGVDaGVja3N1bXNNaWRkbGV3YXJlXCIpO1xuXG4vLyBzcmMvZmxleGlibGVDaGVja3N1bXNSZXNwb25zZU1pZGRsZXdhcmUudHNcblxuXG4vLyBzcmMvZ2V0Q2hlY2tzdW1BbGdvcml0aG1MaXN0Rm9yUmVzcG9uc2UudHNcbnZhciBnZXRDaGVja3N1bUFsZ29yaXRobUxpc3RGb3JSZXNwb25zZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKHJlc3BvbnNlQWxnb3JpdGhtcyA9IFtdKSA9PiB7XG4gIGNvbnN0IHZhbGlkQ2hlY2tzdW1BbGdvcml0aG1zID0gW107XG4gIGZvciAoY29uc3QgYWxnb3JpdGhtIG9mIFBSSU9SSVRZX09SREVSX0FMR09SSVRITVMpIHtcbiAgICBpZiAoIXJlc3BvbnNlQWxnb3JpdGhtcy5pbmNsdWRlcyhhbGdvcml0aG0pIHx8ICFDTElFTlRfU1VQUE9SVEVEX0FMR09SSVRITVMuaW5jbHVkZXMoYWxnb3JpdGhtKSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIHZhbGlkQ2hlY2tzdW1BbGdvcml0aG1zLnB1c2goYWxnb3JpdGhtKTtcbiAgfVxuICByZXR1cm4gdmFsaWRDaGVja3N1bUFsZ29yaXRobXM7XG59LCBcImdldENoZWNrc3VtQWxnb3JpdGhtTGlzdEZvclJlc3BvbnNlXCIpO1xuXG4vLyBzcmMvaXNDaGVja3N1bVdpdGhQYXJ0TnVtYmVyLnRzXG52YXIgaXNDaGVja3N1bVdpdGhQYXJ0TnVtYmVyID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoY2hlY2tzdW0pID0+IHtcbiAgY29uc3QgbGFzdEh5cGhlbkluZGV4ID0gY2hlY2tzdW0ubGFzdEluZGV4T2YoXCItXCIpO1xuICBpZiAobGFzdEh5cGhlbkluZGV4ICE9PSAtMSkge1xuICAgIGNvbnN0IG51bWJlclBhcnQgPSBjaGVja3N1bS5zbGljZShsYXN0SHlwaGVuSW5kZXggKyAxKTtcbiAgICBpZiAoIW51bWJlclBhcnQuc3RhcnRzV2l0aChcIjBcIikpIHtcbiAgICAgIGNvbnN0IG51bWJlciA9IHBhcnNlSW50KG51bWJlclBhcnQsIDEwKTtcbiAgICAgIGlmICghaXNOYU4obnVtYmVyKSAmJiBudW1iZXIgPj0gMSAmJiBudW1iZXIgPD0gMWU0KSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59LCBcImlzQ2hlY2tzdW1XaXRoUGFydE51bWJlclwiKTtcblxuLy8gc3JjL2ZsZXhpYmxlQ2hlY2tzdW1zUmVzcG9uc2VNaWRkbGV3YXJlLnRzXG52YXIgaW1wb3J0X2NyZWF0ZV9yZWFkX3N0cmVhbV9vbl9idWZmZXIgPSByZXF1aXJlKFwiLi9zdHJlYW1zL2NyZWF0ZS1yZWFkLXN0cmVhbS1vbi1idWZmZXJcIik7XG5cbi8vIHNyYy92YWxpZGF0ZUNoZWNrc3VtRnJvbVJlc3BvbnNlLnRzXG52YXIgaW1wb3J0X3V0aWxfc3RyZWFtID0gcmVxdWlyZShcIkBzbWl0aHkvdXRpbC1zdHJlYW1cIik7XG5cbi8vIHNyYy9nZXRDaGVja3N1bS50c1xudmFyIGdldENoZWNrc3VtID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShhc3luYyAoYm9keSwgeyBjaGVja3N1bUFsZ29yaXRobUZuLCBiYXNlNjRFbmNvZGVyIH0pID0+IGJhc2U2NEVuY29kZXIoYXdhaXQgc3RyaW5nSGFzaGVyKGNoZWNrc3VtQWxnb3JpdGhtRm4sIGJvZHkpKSwgXCJnZXRDaGVja3N1bVwiKTtcblxuLy8gc3JjL3ZhbGlkYXRlQ2hlY2tzdW1Gcm9tUmVzcG9uc2UudHNcbnZhciB2YWxpZGF0ZUNoZWNrc3VtRnJvbVJlc3BvbnNlID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShhc3luYyAocmVzcG9uc2UsIHsgY29uZmlnLCByZXNwb25zZUFsZ29yaXRobXMgfSkgPT4ge1xuICBjb25zdCBjaGVja3N1bUFsZ29yaXRobXMgPSBnZXRDaGVja3N1bUFsZ29yaXRobUxpc3RGb3JSZXNwb25zZShyZXNwb25zZUFsZ29yaXRobXMpO1xuICBjb25zdCB7IGJvZHk6IHJlc3BvbnNlQm9keSwgaGVhZGVyczogcmVzcG9uc2VIZWFkZXJzIH0gPSByZXNwb25zZTtcbiAgZm9yIChjb25zdCBhbGdvcml0aG0gb2YgY2hlY2tzdW1BbGdvcml0aG1zKSB7XG4gICAgY29uc3QgcmVzcG9uc2VIZWFkZXIgPSBnZXRDaGVja3N1bUxvY2F0aW9uTmFtZShhbGdvcml0aG0pO1xuICAgIGNvbnN0IGNoZWNrc3VtRnJvbVJlc3BvbnNlID0gcmVzcG9uc2VIZWFkZXJzW3Jlc3BvbnNlSGVhZGVyXTtcbiAgICBpZiAoY2hlY2tzdW1Gcm9tUmVzcG9uc2UpIHtcbiAgICAgIGNvbnN0IGNoZWNrc3VtQWxnb3JpdGhtRm4gPSBzZWxlY3RDaGVja3N1bUFsZ29yaXRobUZ1bmN0aW9uKGFsZ29yaXRobSwgY29uZmlnKTtcbiAgICAgIGNvbnN0IHsgYmFzZTY0RW5jb2RlciB9ID0gY29uZmlnO1xuICAgICAgaWYgKGlzU3RyZWFtaW5nKHJlc3BvbnNlQm9keSkpIHtcbiAgICAgICAgcmVzcG9uc2UuYm9keSA9ICgwLCBpbXBvcnRfdXRpbF9zdHJlYW0uY3JlYXRlQ2hlY2tzdW1TdHJlYW0pKHtcbiAgICAgICAgICBleHBlY3RlZENoZWNrc3VtOiBjaGVja3N1bUZyb21SZXNwb25zZSxcbiAgICAgICAgICBjaGVja3N1bVNvdXJjZUxvY2F0aW9uOiByZXNwb25zZUhlYWRlcixcbiAgICAgICAgICBjaGVja3N1bTogbmV3IGNoZWNrc3VtQWxnb3JpdGhtRm4oKSxcbiAgICAgICAgICBzb3VyY2U6IHJlc3BvbnNlQm9keSxcbiAgICAgICAgICBiYXNlNjRFbmNvZGVyXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBjaGVja3N1bSA9IGF3YWl0IGdldENoZWNrc3VtKHJlc3BvbnNlQm9keSwgeyBjaGVja3N1bUFsZ29yaXRobUZuLCBiYXNlNjRFbmNvZGVyIH0pO1xuICAgICAgaWYgKGNoZWNrc3VtID09PSBjaGVja3N1bUZyb21SZXNwb25zZSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYENoZWNrc3VtIG1pc21hdGNoOiBleHBlY3RlZCBcIiR7Y2hlY2tzdW19XCIgYnV0IHJlY2VpdmVkIFwiJHtjaGVja3N1bUZyb21SZXNwb25zZX1cIiBpbiByZXNwb25zZSBoZWFkZXIgXCIke3Jlc3BvbnNlSGVhZGVyfVwiLmBcbiAgICAgICk7XG4gICAgfVxuICB9XG59LCBcInZhbGlkYXRlQ2hlY2tzdW1Gcm9tUmVzcG9uc2VcIik7XG5cbi8vIHNyYy9mbGV4aWJsZUNoZWNrc3Vtc1Jlc3BvbnNlTWlkZGxld2FyZS50c1xudmFyIGZsZXhpYmxlQ2hlY2tzdW1zUmVzcG9uc2VNaWRkbGV3YXJlT3B0aW9ucyA9IHtcbiAgbmFtZTogXCJmbGV4aWJsZUNoZWNrc3Vtc1Jlc3BvbnNlTWlkZGxld2FyZVwiLFxuICB0b01pZGRsZXdhcmU6IFwiZGVzZXJpYWxpemVyTWlkZGxld2FyZVwiLFxuICByZWxhdGlvbjogXCJhZnRlclwiLFxuICB0YWdzOiBbXCJCT0RZX0NIRUNLU1VNXCJdLFxuICBvdmVycmlkZTogdHJ1ZVxufTtcbnZhciBmbGV4aWJsZUNoZWNrc3Vtc1Jlc3BvbnNlTWlkZGxld2FyZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGNvbmZpZywgbWlkZGxld2FyZUNvbmZpZykgPT4gKG5leHQsIGNvbnRleHQpID0+IGFzeW5jIChhcmdzKSA9PiB7XG4gIGlmICghaW1wb3J0X3Byb3RvY29sX2h0dHAuSHR0cFJlcXVlc3QuaXNJbnN0YW5jZShhcmdzLnJlcXVlc3QpKSB7XG4gICAgcmV0dXJuIG5leHQoYXJncyk7XG4gIH1cbiAgY29uc3QgaW5wdXQgPSBhcmdzLmlucHV0O1xuICBjb25zdCByZXN1bHQgPSBhd2FpdCBuZXh0KGFyZ3MpO1xuICBjb25zdCByZXNwb25zZSA9IHJlc3VsdC5yZXNwb25zZTtcbiAgbGV0IGNvbGxlY3RlZFN0cmVhbSA9IHZvaWQgMDtcbiAgY29uc3QgeyByZXF1ZXN0VmFsaWRhdGlvbk1vZGVNZW1iZXIsIHJlc3BvbnNlQWxnb3JpdGhtcyB9ID0gbWlkZGxld2FyZUNvbmZpZztcbiAgaWYgKHJlcXVlc3RWYWxpZGF0aW9uTW9kZU1lbWJlciAmJiBpbnB1dFtyZXF1ZXN0VmFsaWRhdGlvbk1vZGVNZW1iZXJdID09PSBcIkVOQUJMRURcIikge1xuICAgIGNvbnN0IHsgY2xpZW50TmFtZSwgY29tbWFuZE5hbWUgfSA9IGNvbnRleHQ7XG4gICAgY29uc3QgaXNTM1dob2xlT2JqZWN0TXVsdGlwYXJ0R2V0UmVzcG9uc2VDaGVja3N1bSA9IGNsaWVudE5hbWUgPT09IFwiUzNDbGllbnRcIiAmJiBjb21tYW5kTmFtZSA9PT0gXCJHZXRPYmplY3RDb21tYW5kXCIgJiYgZ2V0Q2hlY2tzdW1BbGdvcml0aG1MaXN0Rm9yUmVzcG9uc2UocmVzcG9uc2VBbGdvcml0aG1zKS5ldmVyeSgoYWxnb3JpdGhtKSA9PiB7XG4gICAgICBjb25zdCByZXNwb25zZUhlYWRlciA9IGdldENoZWNrc3VtTG9jYXRpb25OYW1lKGFsZ29yaXRobSk7XG4gICAgICBjb25zdCBjaGVja3N1bUZyb21SZXNwb25zZSA9IHJlc3BvbnNlLmhlYWRlcnNbcmVzcG9uc2VIZWFkZXJdO1xuICAgICAgcmV0dXJuICFjaGVja3N1bUZyb21SZXNwb25zZSB8fCBpc0NoZWNrc3VtV2l0aFBhcnROdW1iZXIoY2hlY2tzdW1Gcm9tUmVzcG9uc2UpO1xuICAgIH0pO1xuICAgIGlmIChpc1MzV2hvbGVPYmplY3RNdWx0aXBhcnRHZXRSZXNwb25zZUNoZWNrc3VtKSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBjb25zdCBpc1N0cmVhbWluZ0JvZHkgPSBpc1N0cmVhbWluZyhyZXNwb25zZS5ib2R5KTtcbiAgICBpZiAoaXNTdHJlYW1pbmdCb2R5KSB7XG4gICAgICBjb2xsZWN0ZWRTdHJlYW0gPSBhd2FpdCBjb25maWcuc3RyZWFtQ29sbGVjdG9yKHJlc3BvbnNlLmJvZHkpO1xuICAgICAgcmVzcG9uc2UuYm9keSA9ICgwLCBpbXBvcnRfY3JlYXRlX3JlYWRfc3RyZWFtX29uX2J1ZmZlci5jcmVhdGVSZWFkU3RyZWFtT25CdWZmZXIpKGNvbGxlY3RlZFN0cmVhbSk7XG4gICAgfVxuICAgIGF3YWl0IHZhbGlkYXRlQ2hlY2tzdW1Gcm9tUmVzcG9uc2UocmVzdWx0LnJlc3BvbnNlLCB7XG4gICAgICBjb25maWcsXG4gICAgICByZXNwb25zZUFsZ29yaXRobXNcbiAgICB9KTtcbiAgICBpZiAoaXNTdHJlYW1pbmdCb2R5ICYmIGNvbGxlY3RlZFN0cmVhbSkge1xuICAgICAgcmVzcG9uc2UuYm9keSA9ICgwLCBpbXBvcnRfY3JlYXRlX3JlYWRfc3RyZWFtX29uX2J1ZmZlci5jcmVhdGVSZWFkU3RyZWFtT25CdWZmZXIpKGNvbGxlY3RlZFN0cmVhbSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59LCBcImZsZXhpYmxlQ2hlY2tzdW1zUmVzcG9uc2VNaWRkbGV3YXJlXCIpO1xuXG4vLyBzcmMvZ2V0RmxleGlibGVDaGVja3N1bXNQbHVnaW4udHNcbnZhciBnZXRGbGV4aWJsZUNoZWNrc3Vtc1BsdWdpbiA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGNvbmZpZywgbWlkZGxld2FyZUNvbmZpZykgPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQoZmxleGlibGVDaGVja3N1bXNNaWRkbGV3YXJlKGNvbmZpZywgbWlkZGxld2FyZUNvbmZpZyksIGZsZXhpYmxlQ2hlY2tzdW1zTWlkZGxld2FyZU9wdGlvbnMpO1xuICAgIGNsaWVudFN0YWNrLmFkZFJlbGF0aXZlVG8oXG4gICAgICBmbGV4aWJsZUNoZWNrc3Vtc1Jlc3BvbnNlTWlkZGxld2FyZShjb25maWcsIG1pZGRsZXdhcmVDb25maWcpLFxuICAgICAgZmxleGlibGVDaGVja3N1bXNSZXNwb25zZU1pZGRsZXdhcmVPcHRpb25zXG4gICAgKTtcbiAgfVxufSksIFwiZ2V0RmxleGlibGVDaGVja3N1bXNQbHVnaW5cIik7XG5cbi8vIHNyYy9yZXNvbHZlRmxleGlibGVDaGVja3N1bXNDb25maWcudHNcbnZhciBpbXBvcnRfdXRpbF9taWRkbGV3YXJlID0gcmVxdWlyZShcIkBzbWl0aHkvdXRpbC1taWRkbGV3YXJlXCIpO1xudmFyIHJlc29sdmVGbGV4aWJsZUNoZWNrc3Vtc0NvbmZpZyA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGlucHV0KSA9PiAoe1xuICAuLi5pbnB1dCxcbiAgcmVxdWVzdENoZWNrc3VtQ2FsY3VsYXRpb246ICgwLCBpbXBvcnRfdXRpbF9taWRkbGV3YXJlLm5vcm1hbGl6ZVByb3ZpZGVyKShcbiAgICBpbnB1dC5yZXF1ZXN0Q2hlY2tzdW1DYWxjdWxhdGlvbiA/PyBERUZBVUxUX1JFUVVFU1RfQ0hFQ0tTVU1fQ0FMQ1VMQVRJT05cbiAgKSxcbiAgcmVzcG9uc2VDaGVja3N1bVZhbGlkYXRpb246ICgwLCBpbXBvcnRfdXRpbF9taWRkbGV3YXJlLm5vcm1hbGl6ZVByb3ZpZGVyKShcbiAgICBpbnB1dC5yZXNwb25zZUNoZWNrc3VtVmFsaWRhdGlvbiA/PyBERUZBVUxUX1JFU1BPTlNFX0NIRUNLU1VNX1ZBTElEQVRJT05cbiAgKVxufSksIFwicmVzb2x2ZUZsZXhpYmxlQ2hlY2tzdW1zQ29uZmlnXCIpO1xuLy8gQW5ub3RhdGUgdGhlIENvbW1vbkpTIGV4cG9ydCBuYW1lcyBmb3IgRVNNIGltcG9ydCBpbiBub2RlOlxuXG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgRU5WX1JFUVVFU1RfQ0hFQ0tTVU1fQ0FMQ1VMQVRJT04sXG4gIENPTkZJR19SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OLFxuICBOT0RFX1JFUVVFU1RfQ0hFQ0tTVU1fQ0FMQ1VMQVRJT05fQ09ORklHX09QVElPTlMsXG4gIEVOVl9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OLFxuICBDT05GSUdfUkVTUE9OU0VfQ0hFQ0tTVU1fVkFMSURBVElPTixcbiAgTk9ERV9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OX0NPTkZJR19PUFRJT05TLFxuICBSZXF1ZXN0Q2hlY2tzdW1DYWxjdWxhdGlvbixcbiAgREVGQVVMVF9SRVFVRVNUX0NIRUNLU1VNX0NBTENVTEFUSU9OLFxuICBSZXNwb25zZUNoZWNrc3VtVmFsaWRhdGlvbixcbiAgREVGQVVMVF9SRVNQT05TRV9DSEVDS1NVTV9WQUxJREFUSU9OLFxuICBDaGVja3N1bUFsZ29yaXRobSxcbiAgQ2hlY2tzdW1Mb2NhdGlvbixcbiAgREVGQVVMVF9DSEVDS1NVTV9BTEdPUklUSE0sXG4gIFMzX0VYUFJFU1NfREVGQVVMVF9DSEVDS1NVTV9BTEdPUklUSE0sXG4gIGZsZXhpYmxlQ2hlY2tzdW1zTWlkZGxld2FyZU9wdGlvbnMsXG4gIGZsZXhpYmxlQ2hlY2tzdW1zTWlkZGxld2FyZSxcbiAgZ2V0RmxleGlibGVDaGVja3N1bXNQbHVnaW4sXG4gIHJlc29sdmVGbGV4aWJsZUNoZWNrc3Vtc0NvbmZpZ1xufSk7XG5cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/streams/create-read-stream-on-buffer.js":
/*!******************************************************************************************************************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/streams/create-read-stream-on-buffer.js ***!
  \******************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createReadStreamOnBuffer = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nfunction createReadStreamOnBuffer(buffer) {\n    const stream = new stream_1.Transform();\n    stream.push(buffer);\n    stream.push(null);\n    return stream;\n}\nexports.createReadStreamOnBuffer = createReadStreamOnBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK21pZGRsZXdhcmUtZmxleGlibGUtY2hlY2tzdW1zQDMuNzE3LjAvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtZmxleGlibGUtY2hlY2tzdW1zL2Rpc3QtY2pzL3N0cmVhbXMvY3JlYXRlLXJlYWQtc3RyZWFtLW9uLWJ1ZmZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0M7QUFDaEMsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyIvVXNlcnMvZXJpbmplcnJpL25vZGVfbW9kdWxlcy8ucG5wbS9AYXdzLXNkayttaWRkbGV3YXJlLWZsZXhpYmxlLWNoZWNrc3Vtc0AzLjcxNy4wL25vZGVfbW9kdWxlcy9AYXdzLXNkay9taWRkbGV3YXJlLWZsZXhpYmxlLWNoZWNrc3Vtcy9kaXN0LWNqcy9zdHJlYW1zL2NyZWF0ZS1yZWFkLXN0cmVhbS1vbi1idWZmZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVJlYWRTdHJlYW1PbkJ1ZmZlciA9IHZvaWQgMDtcbmNvbnN0IHN0cmVhbV8xID0gcmVxdWlyZShcInN0cmVhbVwiKTtcbmZ1bmN0aW9uIGNyZWF0ZVJlYWRTdHJlYW1PbkJ1ZmZlcihidWZmZXIpIHtcbiAgICBjb25zdCBzdHJlYW0gPSBuZXcgc3RyZWFtXzEuVHJhbnNmb3JtKCk7XG4gICAgc3RyZWFtLnB1c2goYnVmZmVyKTtcbiAgICBzdHJlYW0ucHVzaChudWxsKTtcbiAgICByZXR1cm4gc3RyZWFtO1xufVxuZXhwb3J0cy5jcmVhdGVSZWFkU3RyZWFtT25CdWZmZXIgPSBjcmVhdGVSZWFkU3RyZWFtT25CdWZmZXI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../../../node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.717.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/streams/create-read-stream-on-buffer.js\n");

/***/ })

};
;