"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@aws-sdk+signature-v4-multi-region@3.716.0";
exports.ids = ["vendor-chunks/@aws-sdk+signature-v4-multi-region@3.716.0"];
exports.modules = {

/***/ "(rsc)/../../../../node_modules/.pnpm/@aws-sdk+signature-v4-multi-region@3.716.0/node_modules/@aws-sdk/signature-v4-multi-region/dist-cjs/index.js":
/*!***************************************************************************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/@aws-sdk+signature-v4-multi-region@3.716.0/node_modules/@aws-sdk/signature-v4-multi-region/dist-cjs/index.js ***!
  \***************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  SignatureV4MultiRegion: () => SignatureV4MultiRegion,\n  signatureV4CrtContainer: () => signatureV4CrtContainer\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/SignatureV4MultiRegion.ts\nvar import_middleware_sdk_s3 = __webpack_require__(/*! @aws-sdk/middleware-sdk-s3 */ \"(rsc)/../../../../node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.716.0/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/index.js\");\n\n// src/signature-v4-crt-container.ts\nvar signatureV4CrtContainer = {\n  CrtSignerV4: null\n};\n\n// src/SignatureV4MultiRegion.ts\nvar _SignatureV4MultiRegion = class _SignatureV4MultiRegion {\n  constructor(options) {\n    this.sigv4Signer = new import_middleware_sdk_s3.SignatureV4S3Express(options);\n    this.signerOptions = options;\n  }\n  async sign(requestToSign, options = {}) {\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\")\n        throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().sign(requestToSign, options);\n    }\n    return this.sigv4Signer.sign(requestToSign, options);\n  }\n  /**\n   * Sign with alternate credentials to the ones provided in the constructor.\n   */\n  async signWithCredentials(requestToSign, credentials, options = {}) {\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\")\n        throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().signWithCredentials(requestToSign, credentials, options);\n    }\n    return this.sigv4Signer.signWithCredentials(requestToSign, credentials, options);\n  }\n  async presign(originalRequest, options = {}) {\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\")\n        throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().presign(originalRequest, options);\n    }\n    return this.sigv4Signer.presign(originalRequest, options);\n  }\n  async presignWithCredentials(originalRequest, credentials, options = {}) {\n    if (options.signingRegion === \"*\") {\n      throw new Error(\"Method presignWithCredentials is not supported for [signingRegion=*].\");\n    }\n    return this.sigv4Signer.presignWithCredentials(originalRequest, credentials, options);\n  }\n  getSigv4aSigner() {\n    if (!this.sigv4aSigner) {\n      let CrtSignerV4 = null;\n      try {\n        CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n        if (typeof CrtSignerV4 !== \"function\")\n          throw new Error();\n      } catch (e) {\n        e.message = `${e.message}\nPlease check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. \nYou must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. \nFor more information please go to https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt`;\n        throw e;\n      }\n      this.sigv4aSigner = new CrtSignerV4({\n        ...this.signerOptions,\n        signingAlgorithm: 1\n      });\n    }\n    return this.sigv4aSigner;\n  }\n};\n__name(_SignatureV4MultiRegion, \"SignatureV4MultiRegion\");\nvar SignatureV4MultiRegion = _SignatureV4MultiRegion;\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (0);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK3NpZ25hdHVyZS12NC1tdWx0aS1yZWdpb25AMy43MTYuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvc2lnbmF0dXJlLXY0LW11bHRpLXJlZ2lvbi9kaXN0LWNqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELDJCQUEyQjtBQUN2RjtBQUNBO0FBQ0EsOEJBQThCLGtDQUFrQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQSxvREFBb0Qsa0JBQWtCLGFBQWE7O0FBRW5GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7QUFDQSwrQkFBK0IsbUJBQU8sQ0FBQyxvS0FBNEI7O0FBRW5FO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RTtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsdUJBQXVCO0FBQ3ZCO0FBQ0Esb0ZBQW9GLG1FQUFtRTtBQUN2SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTSxDQUdMIiwic291cmNlcyI6WyIvVXNlcnMvZXJpbmplcnJpL25vZGVfbW9kdWxlcy8ucG5wbS9AYXdzLXNkaytzaWduYXR1cmUtdjQtbXVsdGktcmVnaW9uQDMuNzE2LjAvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL3NpZ25hdHVyZS12NC1tdWx0aS1yZWdpb24vZGlzdC1janMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIF9fZ2V0T3duUHJvcE5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX25hbWUgPSAodGFyZ2V0LCB2YWx1ZSkgPT4gX19kZWZQcm9wKHRhcmdldCwgXCJuYW1lXCIsIHsgdmFsdWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9KTtcbnZhciBfX2V4cG9ydCA9ICh0YXJnZXQsIGFsbCkgPT4ge1xuICBmb3IgKHZhciBuYW1lIGluIGFsbClcbiAgICBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCB7IGdldDogYWxsW25hbWVdLCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xufTtcbnZhciBfX2NvcHlQcm9wcyA9ICh0bywgZnJvbSwgZXhjZXB0LCBkZXNjKSA9PiB7XG4gIGlmIChmcm9tICYmIHR5cGVvZiBmcm9tID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBmcm9tID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBmb3IgKGxldCBrZXkgb2YgX19nZXRPd25Qcm9wTmFtZXMoZnJvbSkpXG4gICAgICBpZiAoIV9faGFzT3duUHJvcC5jYWxsKHRvLCBrZXkpICYmIGtleSAhPT0gZXhjZXB0KVxuICAgICAgICBfX2RlZlByb3AodG8sIGtleSwgeyBnZXQ6ICgpID0+IGZyb21ba2V5XSwgZW51bWVyYWJsZTogIShkZXNjID0gX19nZXRPd25Qcm9wRGVzYyhmcm9tLCBrZXkpKSB8fCBkZXNjLmVudW1lcmFibGUgfSk7XG4gIH1cbiAgcmV0dXJuIHRvO1xufTtcbnZhciBfX3RvQ29tbW9uSlMgPSAobW9kKSA9PiBfX2NvcHlQcm9wcyhfX2RlZlByb3Aoe30sIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pLCBtb2QpO1xuXG4vLyBzcmMvaW5kZXgudHNcbnZhciBzcmNfZXhwb3J0cyA9IHt9O1xuX19leHBvcnQoc3JjX2V4cG9ydHMsIHtcbiAgU2lnbmF0dXJlVjRNdWx0aVJlZ2lvbjogKCkgPT4gU2lnbmF0dXJlVjRNdWx0aVJlZ2lvbixcbiAgc2lnbmF0dXJlVjRDcnRDb250YWluZXI6ICgpID0+IHNpZ25hdHVyZVY0Q3J0Q29udGFpbmVyXG59KTtcbm1vZHVsZS5leHBvcnRzID0gX190b0NvbW1vbkpTKHNyY19leHBvcnRzKTtcblxuLy8gc3JjL1NpZ25hdHVyZVY0TXVsdGlSZWdpb24udHNcbnZhciBpbXBvcnRfbWlkZGxld2FyZV9zZGtfczMgPSByZXF1aXJlKFwiQGF3cy1zZGsvbWlkZGxld2FyZS1zZGstczNcIik7XG5cbi8vIHNyYy9zaWduYXR1cmUtdjQtY3J0LWNvbnRhaW5lci50c1xudmFyIHNpZ25hdHVyZVY0Q3J0Q29udGFpbmVyID0ge1xuICBDcnRTaWduZXJWNDogbnVsbFxufTtcblxuLy8gc3JjL1NpZ25hdHVyZVY0TXVsdGlSZWdpb24udHNcbnZhciBfU2lnbmF0dXJlVjRNdWx0aVJlZ2lvbiA9IGNsYXNzIF9TaWduYXR1cmVWNE11bHRpUmVnaW9uIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMuc2lndjRTaWduZXIgPSBuZXcgaW1wb3J0X21pZGRsZXdhcmVfc2RrX3MzLlNpZ25hdHVyZVY0UzNFeHByZXNzKG9wdGlvbnMpO1xuICAgIHRoaXMuc2lnbmVyT3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cbiAgYXN5bmMgc2lnbihyZXF1ZXN0VG9TaWduLCBvcHRpb25zID0ge30pIHtcbiAgICBpZiAob3B0aW9ucy5zaWduaW5nUmVnaW9uID09PSBcIipcIikge1xuICAgICAgaWYgKHRoaXMuc2lnbmVyT3B0aW9ucy5ydW50aW1lICE9PSBcIm5vZGVcIilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyByZXF1ZXN0IHJlcXVpcmVzIHNpZ25pbmcgd2l0aCBTaWdWNEFzeW1tZXRyaWMgYWxnb3JpdGhtLiBJdCdzIG9ubHkgYXZhaWxhYmxlIGluIE5vZGUuanNcIik7XG4gICAgICByZXR1cm4gdGhpcy5nZXRTaWd2NGFTaWduZXIoKS5zaWduKHJlcXVlc3RUb1NpZ24sIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zaWd2NFNpZ25lci5zaWduKHJlcXVlc3RUb1NpZ24sIG9wdGlvbnMpO1xuICB9XG4gIC8qKlxuICAgKiBTaWduIHdpdGggYWx0ZXJuYXRlIGNyZWRlbnRpYWxzIHRvIHRoZSBvbmVzIHByb3ZpZGVkIGluIHRoZSBjb25zdHJ1Y3Rvci5cbiAgICovXG4gIGFzeW5jIHNpZ25XaXRoQ3JlZGVudGlhbHMocmVxdWVzdFRvU2lnbiwgY3JlZGVudGlhbHMsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChvcHRpb25zLnNpZ25pbmdSZWdpb24gPT09IFwiKlwiKSB7XG4gICAgICBpZiAodGhpcy5zaWduZXJPcHRpb25zLnJ1bnRpbWUgIT09IFwibm9kZVwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIHJlcXVlc3QgcmVxdWlyZXMgc2lnbmluZyB3aXRoIFNpZ1Y0QXN5bW1ldHJpYyBhbGdvcml0aG0uIEl0J3Mgb25seSBhdmFpbGFibGUgaW4gTm9kZS5qc1wiKTtcbiAgICAgIHJldHVybiB0aGlzLmdldFNpZ3Y0YVNpZ25lcigpLnNpZ25XaXRoQ3JlZGVudGlhbHMocmVxdWVzdFRvU2lnbiwgY3JlZGVudGlhbHMsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zaWd2NFNpZ25lci5zaWduV2l0aENyZWRlbnRpYWxzKHJlcXVlc3RUb1NpZ24sIGNyZWRlbnRpYWxzLCBvcHRpb25zKTtcbiAgfVxuICBhc3luYyBwcmVzaWduKG9yaWdpbmFsUmVxdWVzdCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKG9wdGlvbnMuc2lnbmluZ1JlZ2lvbiA9PT0gXCIqXCIpIHtcbiAgICAgIGlmICh0aGlzLnNpZ25lck9wdGlvbnMucnVudGltZSAhPT0gXCJub2RlXCIpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgcmVxdWVzdCByZXF1aXJlcyBzaWduaW5nIHdpdGggU2lnVjRBc3ltbWV0cmljIGFsZ29yaXRobS4gSXQncyBvbmx5IGF2YWlsYWJsZSBpbiBOb2RlLmpzXCIpO1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0U2lndjRhU2lnbmVyKCkucHJlc2lnbihvcmlnaW5hbFJlcXVlc3QsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zaWd2NFNpZ25lci5wcmVzaWduKG9yaWdpbmFsUmVxdWVzdCwgb3B0aW9ucyk7XG4gIH1cbiAgYXN5bmMgcHJlc2lnbldpdGhDcmVkZW50aWFscyhvcmlnaW5hbFJlcXVlc3QsIGNyZWRlbnRpYWxzLCBvcHRpb25zID0ge30pIHtcbiAgICBpZiAob3B0aW9ucy5zaWduaW5nUmVnaW9uID09PSBcIipcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIHByZXNpZ25XaXRoQ3JlZGVudGlhbHMgaXMgbm90IHN1cHBvcnRlZCBmb3IgW3NpZ25pbmdSZWdpb249Kl0uXCIpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zaWd2NFNpZ25lci5wcmVzaWduV2l0aENyZWRlbnRpYWxzKG9yaWdpbmFsUmVxdWVzdCwgY3JlZGVudGlhbHMsIG9wdGlvbnMpO1xuICB9XG4gIGdldFNpZ3Y0YVNpZ25lcigpIHtcbiAgICBpZiAoIXRoaXMuc2lndjRhU2lnbmVyKSB7XG4gICAgICBsZXQgQ3J0U2lnbmVyVjQgPSBudWxsO1xuICAgICAgdHJ5IHtcbiAgICAgICAgQ3J0U2lnbmVyVjQgPSBzaWduYXR1cmVWNENydENvbnRhaW5lci5DcnRTaWduZXJWNDtcbiAgICAgICAgaWYgKHR5cGVvZiBDcnRTaWduZXJWNCAhPT0gXCJmdW5jdGlvblwiKVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBlLm1lc3NhZ2UgPSBgJHtlLm1lc3NhZ2V9XG5QbGVhc2UgY2hlY2sgd2hldGhlciB5b3UgaGF2ZSBpbnN0YWxsZWQgdGhlIFwiQGF3cy1zZGsvc2lnbmF0dXJlLXY0LWNydFwiIHBhY2thZ2UgZXhwbGljaXRseS4gXG5Zb3UgbXVzdCBhbHNvIHJlZ2lzdGVyIHRoZSBwYWNrYWdlIGJ5IGNhbGxpbmcgW3JlcXVpcmUoXCJAYXdzLXNkay9zaWduYXR1cmUtdjQtY3J0XCIpO10gb3IgYW4gRVNNIGVxdWl2YWxlbnQgc3VjaCBhcyBbaW1wb3J0IFwiQGF3cy1zZGsvc2lnbmF0dXJlLXY0LWNydFwiO10uIFxuRm9yIG1vcmUgaW5mb3JtYXRpb24gcGxlYXNlIGdvIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9hd3MvYXdzLXNkay1qcy12MyNmdW5jdGlvbmFsaXR5LXJlcXVpcmluZy1hd3MtY29tbW9uLXJ1bnRpbWUtY3J0YDtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2lndjRhU2lnbmVyID0gbmV3IENydFNpZ25lclY0KHtcbiAgICAgICAgLi4udGhpcy5zaWduZXJPcHRpb25zLFxuICAgICAgICBzaWduaW5nQWxnb3JpdGhtOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuc2lndjRhU2lnbmVyO1xuICB9XG59O1xuX19uYW1lKF9TaWduYXR1cmVWNE11bHRpUmVnaW9uLCBcIlNpZ25hdHVyZVY0TXVsdGlSZWdpb25cIik7XG52YXIgU2lnbmF0dXJlVjRNdWx0aVJlZ2lvbiA9IF9TaWduYXR1cmVWNE11bHRpUmVnaW9uO1xuLy8gQW5ub3RhdGUgdGhlIENvbW1vbkpTIGV4cG9ydCBuYW1lcyBmb3IgRVNNIGltcG9ydCBpbiBub2RlOlxuXG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgU2lnbmF0dXJlVjRNdWx0aVJlZ2lvbixcbiAgc2lnbmF0dXJlVjRDcnRDb250YWluZXJcbn0pO1xuXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../../../node_modules/.pnpm/@aws-sdk+signature-v4-multi-region@3.716.0/node_modules/@aws-sdk/signature-v4-multi-region/dist-cjs/index.js\n");

/***/ })

};
;