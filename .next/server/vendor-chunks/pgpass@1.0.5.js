"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pgpass@1.0.5";
exports.ids = ["vendor-chunks/pgpass@1.0.5"];
exports.modules = {

/***/ "(rsc)/../../../../node_modules/.pnpm/pgpass@1.0.5/node_modules/pgpass/lib/helper.js":
/*!*************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/pgpass@1.0.5/node_modules/pgpass/lib/helper.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar path = __webpack_require__(/*! path */ \"path\")\n  , Stream = (__webpack_require__(/*! stream */ \"stream\").Stream)\n  , split = __webpack_require__(/*! split2 */ \"(rsc)/../../../../node_modules/.pnpm/split2@4.2.0/node_modules/split2/index.js\")\n  , util = __webpack_require__(/*! util */ \"util\")\n  , defaultPort = 5432\n  , isWin = (process.platform === 'win32')\n  , warnStream = process.stderr\n;\n\n\nvar S_IRWXG = 56     //    00070(8)\n  , S_IRWXO = 7      //    00007(8)\n  , S_IFMT  = 61440  // 00170000(8)\n  , S_IFREG = 32768  //  0100000(8)\n;\nfunction isRegFile(mode) {\n    return ((mode & S_IFMT) == S_IFREG);\n}\n\nvar fieldNames = [ 'host', 'port', 'database', 'user', 'password' ];\nvar nrOfFields = fieldNames.length;\nvar passKey = fieldNames[ nrOfFields -1 ];\n\n\nfunction warn() {\n    var isWritable = (\n        warnStream instanceof Stream &&\n          true === warnStream.writable\n    );\n\n    if (isWritable) {\n        var args = Array.prototype.slice.call(arguments).concat(\"\\n\");\n        warnStream.write( util.format.apply(util, args) );\n    }\n}\n\n\nObject.defineProperty(module.exports, \"isWin\", ({\n    get : function() {\n        return isWin;\n    } ,\n    set : function(val) {\n        isWin = val;\n    }\n}));\n\n\nmodule.exports.warnTo = function(stream) {\n    var old = warnStream;\n    warnStream = stream;\n    return old;\n};\n\nmodule.exports.getFileName = function(rawEnv){\n    var env = rawEnv || process.env;\n    var file = env.PGPASSFILE || (\n        isWin ?\n          path.join( env.APPDATA || './' , 'postgresql', 'pgpass.conf' ) :\n          path.join( env.HOME || './', '.pgpass' )\n    );\n    return file;\n};\n\nmodule.exports.usePgPass = function(stats, fname) {\n    if (Object.prototype.hasOwnProperty.call(process.env, 'PGPASSWORD')) {\n        return false;\n    }\n\n    if (isWin) {\n        return true;\n    }\n\n    fname = fname || '<unkn>';\n\n    if (! isRegFile(stats.mode)) {\n        warn('WARNING: password file \"%s\" is not a plain file', fname);\n        return false;\n    }\n\n    if (stats.mode & (S_IRWXG | S_IRWXO)) {\n        /* If password file is insecure, alert the user and ignore it. */\n        warn('WARNING: password file \"%s\" has group or world access; permissions should be u=rw (0600) or less', fname);\n        return false;\n    }\n\n    return true;\n};\n\n\nvar matcher = module.exports.match = function(connInfo, entry) {\n    return fieldNames.slice(0, -1).reduce(function(prev, field, idx){\n        if (idx == 1) {\n            // the port\n            if ( Number( connInfo[field] || defaultPort ) === Number( entry[field] ) ) {\n                return prev && true;\n            }\n        }\n        return prev && (\n            entry[field] === '*' ||\n              entry[field] === connInfo[field]\n        );\n    }, true);\n};\n\n\nmodule.exports.getPassword = function(connInfo, stream, cb) {\n    var pass;\n    var lineStream = stream.pipe(split());\n\n    function onLine(line) {\n        var entry = parseLine(line);\n        if (entry && isValidEntry(entry) && matcher(connInfo, entry)) {\n            pass = entry[passKey];\n            lineStream.end(); // -> calls onEnd(), but pass is set now\n        }\n    }\n\n    var onEnd = function() {\n        stream.destroy();\n        cb(pass);\n    };\n\n    var onErr = function(err) {\n        stream.destroy();\n        warn('WARNING: error on reading file: %s', err);\n        cb(undefined);\n    };\n\n    stream.on('error', onErr);\n    lineStream\n        .on('data', onLine)\n        .on('end', onEnd)\n        .on('error', onErr)\n    ;\n\n};\n\n\nvar parseLine = module.exports.parseLine = function(line) {\n    if (line.length < 11 || line.match(/^\\s+#/)) {\n        return null;\n    }\n\n    var curChar = '';\n    var prevChar = '';\n    var fieldIdx = 0;\n    var startIdx = 0;\n    var endIdx = 0;\n    var obj = {};\n    var isLastField = false;\n    var addToObj = function(idx, i0, i1) {\n        var field = line.substring(i0, i1);\n\n        if (! Object.hasOwnProperty.call(process.env, 'PGPASS_NO_DEESCAPE')) {\n            field = field.replace(/\\\\([:\\\\])/g, '$1');\n        }\n\n        obj[ fieldNames[idx] ] = field;\n    };\n\n    for (var i = 0 ; i < line.length-1 ; i += 1) {\n        curChar = line.charAt(i+1);\n        prevChar = line.charAt(i);\n\n        isLastField = (fieldIdx == nrOfFields-1);\n\n        if (isLastField) {\n            addToObj(fieldIdx, startIdx);\n            break;\n        }\n\n        if (i >= 0 && curChar == ':' && prevChar !== '\\\\') {\n            addToObj(fieldIdx, startIdx, i+1);\n\n            startIdx = i+2;\n            fieldIdx += 1;\n        }\n    }\n\n    obj = ( Object.keys(obj).length === nrOfFields ) ? obj : null;\n\n    return obj;\n};\n\n\nvar isValidEntry = module.exports.isValidEntry = function(entry){\n    var rules = {\n        // host\n        0 : function(x){\n            return x.length > 0;\n        } ,\n        // port\n        1 : function(x){\n            if (x === '*') {\n                return true;\n            }\n            x = Number(x);\n            return (\n                isFinite(x) &&\n                  x > 0 &&\n                  x < 9007199254740992 &&\n                  Math.floor(x) === x\n            );\n        } ,\n        // database\n        2 : function(x){\n            return x.length > 0;\n        } ,\n        // username\n        3 : function(x){\n            return x.length > 0;\n        } ,\n        // password\n        4 : function(x){\n            return x.length > 0;\n        }\n    };\n\n    for (var idx = 0 ; idx < fieldNames.length ; idx += 1) {\n        var rule = rules[idx];\n        var value = entry[ fieldNames[idx] ] || '';\n\n        var res = rule(value);\n        if (!res) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3BncGFzc0AxLjAuNS9ub2RlX21vZHVsZXMvcGdwYXNzL2xpYi9oZWxwZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsV0FBVyxtQkFBTyxDQUFDLGtCQUFNO0FBQ3pCLGFBQWEsb0RBQXdCO0FBQ3JDLFlBQVksbUJBQU8sQ0FBQyw4RkFBUTtBQUM1QixXQUFXLG1CQUFPLENBQUMsa0JBQU07QUFDekI7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLGdEQUErQztBQUMvQztBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQzs7O0FBR0YscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxRUFBcUU7QUFDckU7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQSxjQUFjLG9CQUFvQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOzs7QUFHQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxnQkFBZ0Isd0JBQXdCO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEscUJBQXFCLG9CQUFvQjtBQUN6QztBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7O0FBR0EsbUJBQW1CLDJCQUEyQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QiwwQkFBMEI7QUFDakQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9lcmluamVycmkvbm9kZV9tb2R1bGVzLy5wbnBtL3BncGFzc0AxLjAuNS9ub2RlX21vZHVsZXMvcGdwYXNzL2xpYi9oZWxwZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxuICAsIFN0cmVhbSA9IHJlcXVpcmUoJ3N0cmVhbScpLlN0cmVhbVxuICAsIHNwbGl0ID0gcmVxdWlyZSgnc3BsaXQyJylcbiAgLCB1dGlsID0gcmVxdWlyZSgndXRpbCcpXG4gICwgZGVmYXVsdFBvcnQgPSA1NDMyXG4gICwgaXNXaW4gPSAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ3dpbjMyJylcbiAgLCB3YXJuU3RyZWFtID0gcHJvY2Vzcy5zdGRlcnJcbjtcblxuXG52YXIgU19JUldYRyA9IDU2ICAgICAvLyAgICAwMDA3MCg4KVxuICAsIFNfSVJXWE8gPSA3ICAgICAgLy8gICAgMDAwMDcoOClcbiAgLCBTX0lGTVQgID0gNjE0NDAgIC8vIDAwMTcwMDAwKDgpXG4gICwgU19JRlJFRyA9IDMyNzY4ICAvLyAgMDEwMDAwMCg4KVxuO1xuZnVuY3Rpb24gaXNSZWdGaWxlKG1vZGUpIHtcbiAgICByZXR1cm4gKChtb2RlICYgU19JRk1UKSA9PSBTX0lGUkVHKTtcbn1cblxudmFyIGZpZWxkTmFtZXMgPSBbICdob3N0JywgJ3BvcnQnLCAnZGF0YWJhc2UnLCAndXNlcicsICdwYXNzd29yZCcgXTtcbnZhciBuck9mRmllbGRzID0gZmllbGROYW1lcy5sZW5ndGg7XG52YXIgcGFzc0tleSA9IGZpZWxkTmFtZXNbIG5yT2ZGaWVsZHMgLTEgXTtcblxuXG5mdW5jdGlvbiB3YXJuKCkge1xuICAgIHZhciBpc1dyaXRhYmxlID0gKFxuICAgICAgICB3YXJuU3RyZWFtIGluc3RhbmNlb2YgU3RyZWFtICYmXG4gICAgICAgICAgdHJ1ZSA9PT0gd2FyblN0cmVhbS53cml0YWJsZVxuICAgICk7XG5cbiAgICBpZiAoaXNXcml0YWJsZSkge1xuICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykuY29uY2F0KFwiXFxuXCIpO1xuICAgICAgICB3YXJuU3RyZWFtLndyaXRlKCB1dGlsLmZvcm1hdC5hcHBseSh1dGlsLCBhcmdzKSApO1xuICAgIH1cbn1cblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLmV4cG9ydHMsICdpc1dpbicsIHtcbiAgICBnZXQgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGlzV2luO1xuICAgIH0gLFxuICAgIHNldCA6IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgICBpc1dpbiA9IHZhbDtcbiAgICB9XG59KTtcblxuXG5tb2R1bGUuZXhwb3J0cy53YXJuVG8gPSBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICB2YXIgb2xkID0gd2FyblN0cmVhbTtcbiAgICB3YXJuU3RyZWFtID0gc3RyZWFtO1xuICAgIHJldHVybiBvbGQ7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5nZXRGaWxlTmFtZSA9IGZ1bmN0aW9uKHJhd0Vudil7XG4gICAgdmFyIGVudiA9IHJhd0VudiB8fCBwcm9jZXNzLmVudjtcbiAgICB2YXIgZmlsZSA9IGVudi5QR1BBU1NGSUxFIHx8IChcbiAgICAgICAgaXNXaW4gP1xuICAgICAgICAgIHBhdGguam9pbiggZW52LkFQUERBVEEgfHwgJy4vJyAsICdwb3N0Z3Jlc3FsJywgJ3BncGFzcy5jb25mJyApIDpcbiAgICAgICAgICBwYXRoLmpvaW4oIGVudi5IT01FIHx8ICcuLycsICcucGdwYXNzJyApXG4gICAgKTtcbiAgICByZXR1cm4gZmlsZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLnVzZVBnUGFzcyA9IGZ1bmN0aW9uKHN0YXRzLCBmbmFtZSkge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocHJvY2Vzcy5lbnYsICdQR1BBU1NXT1JEJykpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChpc1dpbikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBmbmFtZSA9IGZuYW1lIHx8ICc8dW5rbj4nO1xuXG4gICAgaWYgKCEgaXNSZWdGaWxlKHN0YXRzLm1vZGUpKSB7XG4gICAgICAgIHdhcm4oJ1dBUk5JTkc6IHBhc3N3b3JkIGZpbGUgXCIlc1wiIGlzIG5vdCBhIHBsYWluIGZpbGUnLCBmbmFtZSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoc3RhdHMubW9kZSAmIChTX0lSV1hHIHwgU19JUldYTykpIHtcbiAgICAgICAgLyogSWYgcGFzc3dvcmQgZmlsZSBpcyBpbnNlY3VyZSwgYWxlcnQgdGhlIHVzZXIgYW5kIGlnbm9yZSBpdC4gKi9cbiAgICAgICAgd2FybignV0FSTklORzogcGFzc3dvcmQgZmlsZSBcIiVzXCIgaGFzIGdyb3VwIG9yIHdvcmxkIGFjY2VzczsgcGVybWlzc2lvbnMgc2hvdWxkIGJlIHU9cncgKDA2MDApIG9yIGxlc3MnLCBmbmFtZSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5cblxudmFyIG1hdGNoZXIgPSBtb2R1bGUuZXhwb3J0cy5tYXRjaCA9IGZ1bmN0aW9uKGNvbm5JbmZvLCBlbnRyeSkge1xuICAgIHJldHVybiBmaWVsZE5hbWVzLnNsaWNlKDAsIC0xKS5yZWR1Y2UoZnVuY3Rpb24ocHJldiwgZmllbGQsIGlkeCl7XG4gICAgICAgIGlmIChpZHggPT0gMSkge1xuICAgICAgICAgICAgLy8gdGhlIHBvcnRcbiAgICAgICAgICAgIGlmICggTnVtYmVyKCBjb25uSW5mb1tmaWVsZF0gfHwgZGVmYXVsdFBvcnQgKSA9PT0gTnVtYmVyKCBlbnRyeVtmaWVsZF0gKSApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJldiAmJiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcmV2ICYmIChcbiAgICAgICAgICAgIGVudHJ5W2ZpZWxkXSA9PT0gJyonIHx8XG4gICAgICAgICAgICAgIGVudHJ5W2ZpZWxkXSA9PT0gY29ubkluZm9bZmllbGRdXG4gICAgICAgICk7XG4gICAgfSwgdHJ1ZSk7XG59O1xuXG5cbm1vZHVsZS5leHBvcnRzLmdldFBhc3N3b3JkID0gZnVuY3Rpb24oY29ubkluZm8sIHN0cmVhbSwgY2IpIHtcbiAgICB2YXIgcGFzcztcbiAgICB2YXIgbGluZVN0cmVhbSA9IHN0cmVhbS5waXBlKHNwbGl0KCkpO1xuXG4gICAgZnVuY3Rpb24gb25MaW5lKGxpbmUpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gcGFyc2VMaW5lKGxpbmUpO1xuICAgICAgICBpZiAoZW50cnkgJiYgaXNWYWxpZEVudHJ5KGVudHJ5KSAmJiBtYXRjaGVyKGNvbm5JbmZvLCBlbnRyeSkpIHtcbiAgICAgICAgICAgIHBhc3MgPSBlbnRyeVtwYXNzS2V5XTtcbiAgICAgICAgICAgIGxpbmVTdHJlYW0uZW5kKCk7IC8vIC0+IGNhbGxzIG9uRW5kKCksIGJ1dCBwYXNzIGlzIHNldCBub3dcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHZhciBvbkVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0uZGVzdHJveSgpO1xuICAgICAgICBjYihwYXNzKTtcbiAgICB9O1xuXG4gICAgdmFyIG9uRXJyID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIHN0cmVhbS5kZXN0cm95KCk7XG4gICAgICAgIHdhcm4oJ1dBUk5JTkc6IGVycm9yIG9uIHJlYWRpbmcgZmlsZTogJXMnLCBlcnIpO1xuICAgICAgICBjYih1bmRlZmluZWQpO1xuICAgIH07XG5cbiAgICBzdHJlYW0ub24oJ2Vycm9yJywgb25FcnIpO1xuICAgIGxpbmVTdHJlYW1cbiAgICAgICAgLm9uKCdkYXRhJywgb25MaW5lKVxuICAgICAgICAub24oJ2VuZCcsIG9uRW5kKVxuICAgICAgICAub24oJ2Vycm9yJywgb25FcnIpXG4gICAgO1xuXG59O1xuXG5cbnZhciBwYXJzZUxpbmUgPSBtb2R1bGUuZXhwb3J0cy5wYXJzZUxpbmUgPSBmdW5jdGlvbihsaW5lKSB7XG4gICAgaWYgKGxpbmUubGVuZ3RoIDwgMTEgfHwgbGluZS5tYXRjaCgvXlxccysjLykpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIGN1ckNoYXIgPSAnJztcbiAgICB2YXIgcHJldkNoYXIgPSAnJztcbiAgICB2YXIgZmllbGRJZHggPSAwO1xuICAgIHZhciBzdGFydElkeCA9IDA7XG4gICAgdmFyIGVuZElkeCA9IDA7XG4gICAgdmFyIG9iaiA9IHt9O1xuICAgIHZhciBpc0xhc3RGaWVsZCA9IGZhbHNlO1xuICAgIHZhciBhZGRUb09iaiA9IGZ1bmN0aW9uKGlkeCwgaTAsIGkxKSB7XG4gICAgICAgIHZhciBmaWVsZCA9IGxpbmUuc3Vic3RyaW5nKGkwLCBpMSk7XG5cbiAgICAgICAgaWYgKCEgT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwocHJvY2Vzcy5lbnYsICdQR1BBU1NfTk9fREVFU0NBUEUnKSkge1xuICAgICAgICAgICAgZmllbGQgPSBmaWVsZC5yZXBsYWNlKC9cXFxcKFs6XFxcXF0pL2csICckMScpO1xuICAgICAgICB9XG5cbiAgICAgICAgb2JqWyBmaWVsZE5hbWVzW2lkeF0gXSA9IGZpZWxkO1xuICAgIH07XG5cbiAgICBmb3IgKHZhciBpID0gMCA7IGkgPCBsaW5lLmxlbmd0aC0xIDsgaSArPSAxKSB7XG4gICAgICAgIGN1ckNoYXIgPSBsaW5lLmNoYXJBdChpKzEpO1xuICAgICAgICBwcmV2Q2hhciA9IGxpbmUuY2hhckF0KGkpO1xuXG4gICAgICAgIGlzTGFzdEZpZWxkID0gKGZpZWxkSWR4ID09IG5yT2ZGaWVsZHMtMSk7XG5cbiAgICAgICAgaWYgKGlzTGFzdEZpZWxkKSB7XG4gICAgICAgICAgICBhZGRUb09iaihmaWVsZElkeCwgc3RhcnRJZHgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaSA+PSAwICYmIGN1ckNoYXIgPT0gJzonICYmIHByZXZDaGFyICE9PSAnXFxcXCcpIHtcbiAgICAgICAgICAgIGFkZFRvT2JqKGZpZWxkSWR4LCBzdGFydElkeCwgaSsxKTtcblxuICAgICAgICAgICAgc3RhcnRJZHggPSBpKzI7XG4gICAgICAgICAgICBmaWVsZElkeCArPSAxO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb2JqID0gKCBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gbnJPZkZpZWxkcyApID8gb2JqIDogbnVsbDtcblxuICAgIHJldHVybiBvYmo7XG59O1xuXG5cbnZhciBpc1ZhbGlkRW50cnkgPSBtb2R1bGUuZXhwb3J0cy5pc1ZhbGlkRW50cnkgPSBmdW5jdGlvbihlbnRyeSl7XG4gICAgdmFyIHJ1bGVzID0ge1xuICAgICAgICAvLyBob3N0XG4gICAgICAgIDAgOiBmdW5jdGlvbih4KXtcbiAgICAgICAgICAgIHJldHVybiB4Lmxlbmd0aCA+IDA7XG4gICAgICAgIH0gLFxuICAgICAgICAvLyBwb3J0XG4gICAgICAgIDEgOiBmdW5jdGlvbih4KXtcbiAgICAgICAgICAgIGlmICh4ID09PSAnKicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHggPSBOdW1iZXIoeCk7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIGlzRmluaXRlKHgpICYmXG4gICAgICAgICAgICAgICAgICB4ID4gMCAmJlxuICAgICAgICAgICAgICAgICAgeCA8IDkwMDcxOTkyNTQ3NDA5OTIgJiZcbiAgICAgICAgICAgICAgICAgIE1hdGguZmxvb3IoeCkgPT09IHhcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0gLFxuICAgICAgICAvLyBkYXRhYmFzZVxuICAgICAgICAyIDogZnVuY3Rpb24oeCl7XG4gICAgICAgICAgICByZXR1cm4geC5sZW5ndGggPiAwO1xuICAgICAgICB9ICxcbiAgICAgICAgLy8gdXNlcm5hbWVcbiAgICAgICAgMyA6IGZ1bmN0aW9uKHgpe1xuICAgICAgICAgICAgcmV0dXJuIHgubGVuZ3RoID4gMDtcbiAgICAgICAgfSAsXG4gICAgICAgIC8vIHBhc3N3b3JkXG4gICAgICAgIDQgOiBmdW5jdGlvbih4KXtcbiAgICAgICAgICAgIHJldHVybiB4Lmxlbmd0aCA+IDA7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgZm9yICh2YXIgaWR4ID0gMCA7IGlkeCA8IGZpZWxkTmFtZXMubGVuZ3RoIDsgaWR4ICs9IDEpIHtcbiAgICAgICAgdmFyIHJ1bGUgPSBydWxlc1tpZHhdO1xuICAgICAgICB2YXIgdmFsdWUgPSBlbnRyeVsgZmllbGROYW1lc1tpZHhdIF0gfHwgJyc7XG5cbiAgICAgICAgdmFyIHJlcyA9IHJ1bGUodmFsdWUpO1xuICAgICAgICBpZiAoIXJlcykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG59O1xuXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../../../node_modules/.pnpm/pgpass@1.0.5/node_modules/pgpass/lib/helper.js\n");

/***/ }),

/***/ "(rsc)/../../../../node_modules/.pnpm/pgpass@1.0.5/node_modules/pgpass/lib/index.js":
/*!************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/pgpass@1.0.5/node_modules/pgpass/lib/index.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar path = __webpack_require__(/*! path */ \"path\")\n  , fs = __webpack_require__(/*! fs */ \"fs\")\n  , helper = __webpack_require__(/*! ./helper.js */ \"(rsc)/../../../../node_modules/.pnpm/pgpass@1.0.5/node_modules/pgpass/lib/helper.js\")\n;\n\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\nmodule.exports.warnTo = helper.warnTo;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3BncGFzc0AxLjAuNS9ub2RlX21vZHVsZXMvcGdwYXNzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixXQUFXLG1CQUFPLENBQUMsa0JBQU07QUFDekIsU0FBUyxtQkFBTyxDQUFDLGNBQUk7QUFDckIsYUFBYSxtQkFBTyxDQUFDLHdHQUFhO0FBQ2xDOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxxQkFBcUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9lcmluamVycmkvbm9kZV9tb2R1bGVzLy5wbnBtL3BncGFzc0AxLjAuNS9ub2RlX21vZHVsZXMvcGdwYXNzL2xpYi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG4gICwgZnMgPSByZXF1aXJlKCdmcycpXG4gICwgaGVscGVyID0gcmVxdWlyZSgnLi9oZWxwZXIuanMnKVxuO1xuXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29ubkluZm8sIGNiKSB7XG4gICAgdmFyIGZpbGUgPSBoZWxwZXIuZ2V0RmlsZU5hbWUoKTtcbiAgICBcbiAgICBmcy5zdGF0KGZpbGUsIGZ1bmN0aW9uKGVyciwgc3RhdCl7XG4gICAgICAgIGlmIChlcnIgfHwgIWhlbHBlci51c2VQZ1Bhc3Moc3RhdCwgZmlsZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBjYih1bmRlZmluZWQpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHN0ID0gZnMuY3JlYXRlUmVhZFN0cmVhbShmaWxlKTtcblxuICAgICAgICBoZWxwZXIuZ2V0UGFzc3dvcmQoY29ubkluZm8sIHN0LCBjYik7XG4gICAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy53YXJuVG8gPSBoZWxwZXIud2FyblRvO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../../../node_modules/.pnpm/pgpass@1.0.5/node_modules/pgpass/lib/index.js\n");

/***/ })

};
;